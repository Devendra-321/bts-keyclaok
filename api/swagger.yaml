---
swagger: "2.0"
info:
  description: "This is api for Better Tech Solution"
  version: "1.0.0"
  title: "Better Tech Solution"
  contact:
    name: "BTS Team"
    url: "https://seedemo.co.uk/"
    email: "bts@support.com"
host: "localhost:3200"
basePath: "/v1"
tags:
  - name: "Authentication"
    description: "Routes related to user sign in and user sign up"
  - name: "User"  
    description: "Routes related to user"  
  - name: "Category"  
    description: "Routes related to item category"
  - name: "SubCategory"  
    description: "Routes related to sub-category"
  - name: "Allergy"  
    description: "Routes related to allergy"   
  - name: "Spice"  
    description: "Routes related to spice"
  - name: "Calorie"  
    description: "Routes related to calorie"   
  - name: "FoodType"  
    description: "Routes related to food type"        
  - name: "Item"  
    description: "Routes related to item"  
  - name: "FilterType"  
    description: "Routes related to filter type"
  - name: "HourDiscount"  
    description: "Routes related to hour discount"      
  - name: "DayDiscount"  
    description: "Routes related to day discount"  
  - name: "DiscountCard"  
    description: "Routes related to discount card" 
  - name: "DiscountCategory"  
    description: "Routes related to discount category"   
  - name: "OrderValue"
    description: "Routes related to minimum order value"
  - name: "OrderDiscount"
    description: "Routes related to minimum order discount"
  - name: "ServiceCharge"
    description: "Routes related to service charge"
  - name: "DeliveryCharge"
    description: "Routes related to delivery charge"    
  - name: "Option"
    description: "Routes related to option"       
  - name: "OptionAttribute"
    description: "Routes related to attribute"
  - name: "CheckoutService"
    description: "Routes related to checkout service"
  - name: "DaySchedule"
    description: "Routes related to day schedule"
  - name: "Cart"
    description: "Routes related to cart"
  - name: "PaymentGateway"
    description: "Routes related to payment-gateway"    
  - name: "Order"
    description: "Routes related to order"
  - name: "GiftCard"
    description: "Routes related to gift card"
  - name: "DeliveryChargeType"
    description: "Routes related to delivery charge type"
  - name: "Review"
    description: "Routes related to review"
  - name: "ContactUs"
    description: "Routes related to contact us"
  - name: "CateringEnquiry"
    description: "Routes related to catering enquiry"
  - name: "Flag"
    description: "Routes related to system flag"
  - name: "Config"
    description: "Routes related to system configs"              
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /sign-up:
    post:
      x-swagger-router-controller: "Authentication"
      operationId: "userSignUp"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: user
          in: body
          required: true
          description: The payload for user details
          schema:
            $ref: "#/definitions/user_signUp_details"
      x-public-operation: true
      responses:
        201:
          description: "The JWT token after the user is successfully created"
          schema:
            $ref: "#/definitions/user_create_response"
        400:
          description: "validation error while creating new user"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        409:
          $ref: "#/responses/conflict_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Authentication"
      summary: "API to create a new user"
      description: "This API is responsible for creating a new user"      
  /sign-in:
    post:
      x-swagger-router-controller: "Authentication"
      operationId: "userSignIn"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: user
          in: body
          required: true
          description: The payload for user details
          schema:
            $ref: "#/definitions/user_signIn_details"
      x-public-operation: true
      responses:
        201:
          description: "The JWT token after the user is successfully login"
          schema:
            $ref: "#/definitions/user_create_response"
        400:
          description: "validation error while login user"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        409:
          $ref: "#/responses/conflict_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Authentication"
      summary: "API to login user"
      description: "This API is responsible for login user" 
  /signin:
    get:
      x-swagger-router-controller: "Authentication"
      operationId: "guestUserSignIn"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      description: "This API is responsible for login user"
      responses: 
        200:
          description: "response"
          schema:
            $ref: "#/definitions/user_guest_token"
      summary: "API to get guest user token"    
      tags:
          - "Authentication"
  /update-email-status:
    get:
      x-swagger-router-controller: "Authentication"
      operationId: "updateEmailStatus"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/email_id"
      responses:
        200:
          $ref: "#/responses/user_with_id_response"
        400:
          description: "validation error while sending otp for reset password"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to verify user email"
      description: "This API is responsible for verifying user email"         
  /user/{user_id}:
    parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/user_id"
    put:
      x-swagger-router-controller: "Authentication"
      operationId: "updateUserDetails"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: user
          in: body
          required: true
          description: The payload for user details
          schema:
            $ref: "#/definitions/user_details"
      responses:
        200:
          $ref: "#/responses/user_with_id_response"
        400:
          description: "validation error while updating user with given user_id"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to update user with given user_id"
      description: "This API is responsible for updating user with given user_id"    
    get:
      x-swagger-router-controller: "Authentication"
      operationId: "getUser"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      responses:
        200:
          $ref: "#/responses/user_with_id_response"
        400:
          description: "validation error while fetching user details"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to get user details"
      description: "This API is responsible for getting user details"  
  /user:
    get:
      x-swagger-router-controller: "Authentication"
      operationId: "getUserList"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/page_filter"
        - $ref: "#/parameters/items_per_page_filter"
        - in: "query"
          name: "sortBy"
          description: "The field to sort by together with sorting order example `-created_at`, `created_at`, `-name`, `name`, `-last_login_at`, `last_login_at`"
          type: array
          items:
            type: "string"
            enum:
              - "-created_at"
              - "created_at"
              - "-name"
              - "name"
              - "-last_login_at"
              - "last_login_at"
      responses:
        200:
          description: "Get all users"
          headers:
            x-result-count:
              type: integer
          schema:
            type: array
            items:
              $ref: "#/definitions/user_response"
        204:
          description: "Empty user list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all users"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to fetch all user"
      description: "This API is responsible for fetching all user"   
  /reset-password-link:
    put:
      x-swagger-router-controller: "Authentication"
      operationId: "resetPasswordLink"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: user
          in: body
          required: true
          description: The payload for user email
          schema:
            $ref: "#/definitions/email_details"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/user_with_id_response"
        400:
          description: "validation error while sending reset password link"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to send reset password link"
      description: "This API is responsible for sending reset password link"    
  /verify-reset-link:
    get:
      x-swagger-router-controller: "Authentication"
      operationId: "verifyResetPasswordLink"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/reset_token"
      responses:
        200:
          $ref: "#/responses/user_with_id_response"
        400:
          description: "validation error while verifying reset password link"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "User"
      summary: "API to verify reset password link"
      description: "This API is responsible for verifying reset password link"      
  /category:
    post:
      x-swagger-router-controller: "Category"
      operationId: "createCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: category
          in: body
          required: true
          description: The payload for category details
          schema:
            $ref: "#/definitions/category_details"
      responses:
        201:
          $ref: "#/responses/category_with_id_response"
        400:
          description: "validation error while creating category"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to create category"
      description: "This API is responsible for creating category"   
    get:
      x-swagger-router-controller: "Category"
      operationId: "getCategoryList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/panel_type_filter"
        - $ref: "#/parameters/food_type_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all categories"
          schema:
            type: array
            items:
              $ref: "#/definitions/category_response"
        204:
          description: "Empty category list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all categories"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to fetch all category"
      description: "This API is responsible for fetching all category"
  /category/{category_id}:
    parameters:
      - $ref: "#/parameters/category_id"
    get:
      x-swagger-router-controller: "Category"
      operationId: "getCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/category_with_id_response"
        400:
          description: "validation error while fetching category with given category_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to fetch category with given category_id"
      description: "This API is responsible for fetching category with given category_id" 
    put:
      x-swagger-router-controller: "Category"
      operationId: "updateCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: category
          in: body
          required: true
          description: The payload for category details
          schema:
            $ref: "#/definitions/category_details"
      responses:
        200:
          $ref: "#/responses/category_with_id_response"
        400:
          description: "validation error while updating category with given category_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to update category with given category_id"
      description: "This API is responsible for updating category with given category_id"             
  /category/bulk-create:
    post:
      x-swagger-router-controller: "Category"
      operationId: "bulkCreateCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of category"
          schema:
            type: array
            items:
              $ref: "#/definitions/category_response"
        400:
          description: "validation error while creating bulk of category"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to create bulk category"
      description: "This API is responsible for creating bulk of category" 
  /move/category:
    post:
      x-swagger-router-controller: "Category"
      operationId: "moveCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: category
          in: body
          required: true
          description: The payload for moving category
          schema:
            $ref: "#/definitions/move_category_details"
      responses:
        200:
          $ref: "#/responses/category_with_id_response"
        400:
          description: "validation error while creating category"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Category"
      summary: "API to move category"
      description: "This API is responsible for moving category"                                          
  /sub-category:
    post:
      x-swagger-router-controller: "SubCategory"
      operationId: "createSubCategory"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: subCategory
          in: body
          required: true
          description: The payload for sub-category details
          schema:
            $ref: "#/definitions/sub_category_details"
        - $ref: "#/parameters/x-request-jwt"
      responses:
        201:
          $ref: "#/responses/subCategory_with_id_response"
        400:
          description: "validation error while creating new sub-category"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to create a new sub-category"
      description: "This API is responsible for creating a new sub-category"
    get:
      x-swagger-router-controller: "SubCategory"
      operationId: "getSubCategoryList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/panel_type_filter"
        - $ref: "#/parameters/category_filter"
        - $ref: "#/parameters/food_type_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all sub-categories"
          schema:
            type: array
            items:
              $ref: "#/definitions/subCategory_with_category_response"
        204:
          description: "Empty sub-category list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all sub-categories"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to fetch all sub-category"
      description: "This API is responsible for fetching all sub-category for user and admin"    
  /sub-category/{sub_category_id}:
    parameters:
      - $ref: "#/parameters/sub_category_id"
    get:
      x-swagger-router-controller: "SubCategory"
      operationId: "getSubCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/subCategory_with_id_response"
        400:
          description: "validation error while fetching subCategory with given sub_category_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to fetch sub-category with given sub_category_id"
      description: "This API is responsible for fetching sub-category with given sub_category_id"
    put:
      x-swagger-router-controller: "SubCategory"
      operationId: "updateSubCategory"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: subCategory
          in: body
          required: true
          description: The payload for sub-category details
          schema:
            $ref: "#/definitions/sub_category_details"
      responses:
        200:
          $ref: "#/responses/subCategory_with_id_response"
        400:
          description: "validation error while updating sub-category with given sub_category_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to update sub-category with given subCategory_id"
      description: "This API is responsible for updating sub-category with given subCategory_id"
  /sub-category/bulk-create:
    post:
      x-swagger-router-controller: "SubCategory"
      operationId: "bulkCreateSubCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of sub-category"
          schema:
            type: array
            items:
              $ref: "#/definitions/subCategory_response"
        400:
          description: "validation error while creating bulk of sub-category"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to create bulk calorie"
      description: "This API is responsible for creating bulk of sub-category"    
  /move/sub-category:
    post:
      x-swagger-router-controller: "SubCategory"
      operationId: "moveSubCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: subCategory
          in: body
          required: true
          description: The payload for moving sub-category
          schema:
            $ref: "#/definitions/move_category_details"
      responses:
        200:
          $ref: "#/responses/subCategory_with_id_response"
        400:
          description: "validation error while creating sub-category"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "SubCategory"
      summary: "API to move sub-category"
      description: "This API is responsible for moving sub-category"                                              
  /allergy:
    post:
      x-swagger-router-controller: "Allergy"
      operationId: "createAllergy"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: allergy
          in: body
          required: true
          description: The payload for allergy details
          schema:
            $ref: "#/definitions/allergy_details"
      responses:
        201:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while creating allergy"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Allergy"
      summary: "API to create allergy"
      description: "This API is responsible for creating allergy"   
    get:
      x-swagger-router-controller: "Allergy"
      operationId: "getAllergyList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all allergies"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        204:
          description: "Empty allergy list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all allergies"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Allergy"
      summary: "API to fetch all allergy"
      description: "This API is responsible for fetching all allergy"
  /allergy/{allergy_id}:
    parameters:
      - $ref: "#/parameters/allergy_id"
    get:
      x-swagger-router-controller: "Allergy"
      operationId: "getAllergy"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while fetching allergy with given allergy_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Allergy"
      summary: "API to fetch allergy with given allergy_id"
      description: "This API is responsible for fetching allergy with given allergy_id" 
    put:
      x-swagger-router-controller: "Allergy"
      operationId: "updateAllergy"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: allergy
          in: body
          required: true
          description: The payload for allergy details
          schema:
            $ref: "#/definitions/update_allergy_details"
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while updating allergy with given allergy_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Allergy"
      summary: "API to update allergy with given allergy_id"
      description: "This API is responsible for updating allergy with given allergy_id" 
  /allergy/bulk-create:
    post:
      x-swagger-router-controller: "Allergy"
      operationId: "bulkCreateAllergy"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of allergy"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        400:
          description: "validation error while creating bulk of allergy"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Allergy"
      summary: "API to create bulk allergy"
      description: "This API is responsible for creating bulk of allergy"                            
  /spice:
    post:
      x-swagger-router-controller: "Spice"
      operationId: "createSpice"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: spice
          in: body
          required: true
          description: The payload for spice details
          schema:
            $ref: "#/definitions/allergy_details"
      responses:
        201:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while creating spice level"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Spice"
      summary: "API to create spice level"
      description: "This API is responsible for creating spice level"   
    get:
      x-swagger-router-controller: "Spice"
      operationId: "getSpiceList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all spice levels"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        204:
          description: "Empty spice list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all spice levels"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Spice"
      summary: "API to fetch all spice level"
      description: "This API is responsible for fetching all spice level"
  /spice/{spice_id}:
    parameters:
      - $ref: "#/parameters/spice_id"
    get:
      x-swagger-router-controller: "Spice"
      operationId: "getSpice"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while fetching spice with given spice_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Spice"
      summary: "API to fetch spice with given spice_id"
      description: "This API is responsible for fetching spice with given spice_id" 
    put:
      x-swagger-router-controller: "Spice"
      operationId: "updateSpice"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: spice
          in: body
          required: true
          description: The payload for spice details
          schema:
            $ref: "#/definitions/update_allergy_details"
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while updating spice with given spice_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Spice"
      summary: "API to update spice with given spice_id"
      description: "This API is responsible for updating spice with given spice_id"                
  /spice/bulk-create:
    post:
      x-swagger-router-controller: "Spice"
      operationId: "bulkCreateSpice"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of spice"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        400:
          description: "validation error while creating bulk of spice"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Spice"
      summary: "API to create bulk spice"
      description: "This API is responsible for creating bulk of spice"                                
  /calorie:
    post:
      x-swagger-router-controller: "Calorie"
      operationId: "createCalorie"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: calorie
          in: body
          required: true
          description: The payload for calorie details
          schema:
            $ref: "#/definitions/allergy_details"
      responses:
        201:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while creating calorie"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Calorie"
      summary: "API to create calorie "
      description: "This API is responsible for creating calorie"   
    get:
      x-swagger-router-controller: "Calorie"
      operationId: "getCalorieList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all calorie levels"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        204:
          description: "Empty calorie list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all calorie"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Calorie"
      summary: "API to fetch all calorie"
      description: "This API is responsible for fetching all calorie"
  /calorie/{calorie_id}:
    parameters:
      - $ref: "#/parameters/calorie_id"
    get:
      x-swagger-router-controller: "Calorie"
      operationId: "getCalorie"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while fetching calorie with given calorie_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Calorie"
      summary: "API to fetch calorie with given calorie_id"
      description: "This API is responsible for fetching calorie with given calorie_id" 
    put:
      x-swagger-router-controller: "Calorie"
      operationId: "updateCalorie"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: calorie
          in: body
          required: true
          description: The payload for calorie details
          schema:
            $ref: "#/definitions/update_allergy_details"
      responses:
        200:
          $ref: "#/responses/allergy_with_id_response"
        400:
          description: "validation error while updating calorie with given calorie_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Calorie"
      summary: "API to update calorie with given calorie_id"
      description: "This API is responsible for updating calorie with given calorie_id"  
  /calorie/bulk-create:
    post:
      x-swagger-router-controller: "Calorie"
      operationId: "bulkCreateCalorie"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of calorie"
          schema:
            type: array
            items:
              $ref: "#/definitions/allergy_response"
        400:
          description: "validation error while creating bulk of calorie"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Calorie"
      summary: "API to create bulk calorie"
      description: "This API is responsible for creating bulk of calorie"                                   
  /food-type:
    post:
      x-swagger-router-controller: "FoodType"
      operationId: "createFoodType"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/food_type_name"
        - $ref: "#/parameters/food_type_icon"
      responses:
        201:
          $ref: "#/responses/food_type_with_id_response"
        400:
          description: "validation error while creating food type"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to create food type"
      description: "This API is responsible for creating food type"   
    get:
      x-swagger-router-controller: "FoodType"
      operationId: "getFoodTypeList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all food types"
          schema:
            type: array
            items:
              $ref: "#/definitions/food_type_response"
        204:
          description: "Empty food type list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all food types"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to fetch all food types "
      description: "This API is responsible for fetching all food types"
  /food-type/{food_type_id}:
    parameters:
      - $ref: "#/parameters/food_type_id"
    get:
      x-swagger-router-controller: "FoodType"
      operationId: "getFoodType"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/food_type_with_id_response"
        400:
          description: "validation error while fetching food type with given food_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to fetch food type with given food_type_id"
      description: "This API is responsible for fetching food type with given food_type_id" 
    put:
      x-swagger-router-controller: "FoodType"
      operationId: "updateFoodType"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/food_type_name"
        - $ref: "#/parameters/food_type_icon"
      responses:
        200:
          $ref: "#/responses/food_type_with_id_response"
        400:
          description: "validation error while updating food type with given food_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to update food type with given food_type_id"
      description: "This API is responsible for updating food type with given food_type_id"
  /food-type/status/{food_type_id}:
    put:
      x-swagger-router-controller: "FoodType"
      operationId: "updateFoodTypeStatus"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/food_type_id"
        - $ref: "#/parameters/x-request-jwt"
        - name: foodType
          in: body
          required: true
          description: The payload for food-type status details
          schema:
            $ref: "#/definitions/food_type_status_details"
      responses:
        200:
          $ref: "#/responses/food_type_with_id_response"
        400:
          description: "validation error while updating food type status with given food_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to update food type status with given food_type_id"
      description: "This API is responsible for updating food type status with given food_type_id"   
  /food-type/bulk-create:
    post:
      x-swagger-router-controller: "FoodType"
      operationId: "bulkCreateFoodType"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of food types"
          schema:
            type: array
            items:
              $ref: "#/definitions/food_type_response"
        400:
          description: "validation error while creating bulk of food types"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FoodType"
      summary: "API to create bulk food type"
      description: "This API is responsible for creating bulk of food types"
  /filter-type:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "FilterType"
      operationId: "createFilterType"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: filterType
          in: body
          required: true
          description: The payload for filter type details
          schema:
            $ref: "#/definitions/filter_type_details"
      responses:
        201:
          $ref: "#/responses/filter_type_with_id_response"
        400:
          description: "validation error while creating filter type"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterType"
      summary: "API to create filter-type"
      description: "This API is responsible for creating filter-type"   
    get:
      x-swagger-router-controller: "FilterType"
      operationId: "getFilterTypeList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all filter-types"
          schema:
            type: array
            items:
              $ref: "#/definitions/filter_type_response"
        204:
          description: "Empty filter-type list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all filter-types"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterType"
      summary: "API to fetch all filter-type"
      description: "This API is responsible for fetching all filter-type"
  /filter-type/list:
    get:
      x-swagger-router-controller: "FilterType"
      operationId: "getFilterList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          description: "Get all filter-types with data"
          schema:
            type: array
            items:
              $ref: "#/definitions/filter_type_response"
        204:
          description: "Empty filter-type list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all filter-types"
          schema:
            $ref: "#/definitions/category_validation_error" 
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterType"
      summary: "API to fetch all filter-type with data"
      description: "This API is responsible for fetching all filter-type with data"    
  /filter-type/{filter_type_id}:
    parameters:
      - $ref: "#/parameters/filter_type_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "FilterType"
      operationId: "getFilterType"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      x-role : "user"
      security:
        - jwt: []
      responses:
        200:
          $ref: "#/responses/filter_type_with_id_response"
        400:
          description: "validation error while fetching filter type with given filter_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"      
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterType"
      summary: "API to fetch filter type with given filter_type_id"
      description: "This API is responsible for fetching filter type with given filter_type_id" 
    put:
      x-swagger-router-controller: "FilterType"
      operationId: "updateFilterType"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: filterType
          in: body
          required: true
          description: The payload for filter type details
          schema:
            $ref: "#/definitions/filter_type_details"
      responses:
        200:
          $ref: "#/responses/filter_type_with_id_response"
        400:
          description: "validation error while updating filter-type with given filter_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterType"
      summary: "API to update filter-type with given filter_type_id"
      description: "This API is responsible for updating filter-type with given filter_type_id"
  /filter-data:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "FilterData"
      operationId: "createFilterData"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: filter
          in: body
          required: true
          description: The payload for filter details
          schema:
            $ref: "#/definitions/filter_details"
      responses:
        201:
          $ref: "#/responses/filter_with_id_response"
        400:
          description: "validation error while creating filter data"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterData"
      summary: "API to create filter-data"
      description: "This API is responsible for creating filter-data"   
    get:
      x-swagger-router-controller: "FilterData"
      operationId: "getFilterDataList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/type_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all filter-types"
          description: "Get all items"
          headers:
            x-result-count:
              type: integer
          schema:
            type: array
            items:
              $ref: "#/definitions/filter_response"
        204:
          description: "Empty filter-data list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all filter-data"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterData"
      summary: "API to fetch all filter-data"
      description: "This API is responsible for fetching all filter-data"
  /filter-data/{filter_id}:
    parameters:
      - $ref: "#/parameters/filter_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "FilterData"
      operationId: "getFilterData"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      x-role: "user"
      security:
        - jwt: []
      responses:
        200:
          $ref: "#/responses/filter_with_id_response"
        400:
          description: "validation error while fetching filter data with given filter_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"      
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterData"
      summary: "API to fetch filter data with given filter_id"
      description: "This API is responsible for fetching filter data with given filter_id" 
    put:
      x-swagger-router-controller: "FilterData"
      operationId: "updateFilterData"
      x-blog-api: true
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: filter
          in: body
          required: true
          description: The payload for filter data details
          schema:
            $ref: "#/definitions/filter_details"
      responses:
        200:
          $ref: "#/responses/filter_with_id_response"
        400:
          description: "validation error while updating filter-data with given filter_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterData"
      summary: "API to update filter-data with given filter_id"
      description: "This API is responsible for updating filter-data with given filter_id"                                    
  /filter-data/{filter_type_id}/bulk-create:
    post:
      x-swagger-router-controller: "FilterData"
      operationId: "bulkCreateFilter"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/filter_type_id"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of filter"
          schema:
            type: array
            items:
              $ref: "#/definitions/filter_response"
        400:
          description: "validation error while creating bulk of filter"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "FilterData"
      summary: "API to create bulk filter"
      description: "This API is responsible for creating bulk of filter"                                
  /item:
    post:
      x-swagger-router-controller: "Item"
      operationId: "createItem"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: item
          in: body
          required: true
          description: The payload for item details
          schema:
            $ref: "#/definitions/item_details"
      responses:
        201:
          $ref: "#/responses/item_with_id_response"
        400:
          description: "validation error while creating item"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to create item"
      description: "This API is responsible for creating item" 
    get:
      x-swagger-router-controller: "Item"
      operationId: "getItemList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/promoted_filter"
        - $ref: "#/parameters/panel_type_filter"
        - $ref: "#/parameters/category_filter"
        - $ref: "#/parameters/sub_category_filter"
        - $ref: "#/parameters/food_type_filter"
        - $ref: "#/parameters/filter_type_filter"
        - $ref: "#/parameters/options_filter"
        - $ref: "#/parameters/allergy_filter"
        - $ref: "#/parameters/page_filter"
        - $ref: "#/parameters/items_per_page_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all items"
          schema:
            type: array
            items:
              $ref: "#/definitions/item_response"
        204:
          description: "Empty item list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all items"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to fetch all item"
      description: "This API is responsible for fetching all item"            
  /item/{item_id}:
    parameters:
      - $ref: "#/parameters/item_id"
    get:
      x-swagger-router-controller: "Item"
      operationId: "getItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/item_with_id_response"
        400:
          description: "validation error while fetching item with given item_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to fetch item with given item_id"
      description: "This API is responsible for fetching item with given item_id"     
    put:
      x-swagger-router-controller: "Item"
      operationId: "updateItem"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: item
          in: body
          required: true
          description: The payload for item details
          schema:
            $ref: "#/definitions/item_details"
      responses:
        200:
          $ref: "#/responses/item_with_id_response"
        400:
          description: "validation error while updating item with given item_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to update item with given item_id"
      description: "This API is responsible for updating item with given item_id"  
  /item/bulk-create:
    post:
      x-swagger-router-controller: "Item"
      operationId: "bulkCreateItem"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/file"
      responses:
        200:
          description: "Create bulk of items"
          schema:
            type: array
            items:
              $ref: "#/definitions/item_response"
        400:
          description: "validation error while creating bulk of item"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to create bulk item"
      description: "This API is responsible for creating bulk of item"   
  /move/item:
    post:
      x-swagger-router-controller: "Item"
      operationId: "moveItem"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: item
          in: body
          required: true
          description: The payload for moving item
          schema:
            $ref: "#/definitions/move_item_details"
      responses:
        200:
          $ref: "#/responses/item_with_id_response"
        400:
          description: "validation error while creating item"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to move item"
      description: "This API is responsible for moving item"    
  /item/{item_id}/upload-images:
    parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/item_id"
    put:
      x-swagger-router-controller: "Item"
      operationId: "uploadImages"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/item_img_1"
        - $ref: "#/parameters/item_img_2"
        - $ref: "#/parameters/item_img_3"
        - $ref: "#/parameters/item_img_4"
        - $ref: "#/parameters/item_img_5"
      responses:
        201:
          $ref: "#/responses/item_with_id_response"
        400:
          description: "validation error while uploading images in item"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Item"
      summary: "API to upload images"
      description: "This API is responsible for uploading images in item"     
  /hour-discount:
    post:
      x-swagger-router-controller: "HourDiscount"
      operationId: "createHourDiscount"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount details
          schema:
            $ref: "#/definitions/hour_discount_details"
      responses:
        201:
          $ref: "#/responses/hour_discount_with_id_response"
        400:
          description: "validation error while creating hour discount"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "HourDiscount"
      summary: "API to create hour discount"
      description: "This API is responsible for creating hour discount"   
    get:
      x-swagger-router-controller: "HourDiscount"
      operationId: "getHourDiscountList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/discount_type_filter"
        - $ref: "#/parameters/payment_type_filter"
      responses:
        200:
          description: "Get all discounts"
          schema:
            type: array
            items:
              $ref: "#/definitions/hour_discount_response"
        204:
          description: "Empty discount list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all hour discounts"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "HourDiscount"
      summary: "API to fetch all discounts"
      description: "This API is responsible for fetching all discounts"
  /hour-discount/{discount_id}:
    parameters:
      - $ref: "#/parameters/discount_id"
    get:
      x-swagger-router-controller: "HourDiscount"
      operationId: "getHourDiscount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/hour_discount_with_id_response"
        400:
          description: "validation error while fetching discount with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "HourDiscount"
      summary: "API to fetch discount with given discount_id"
      description: "This API is responsible for fetching discount with given discount_id" 
    put:
      x-swagger-router-controller: "HourDiscount"
      operationId: "updateHourDiscount"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount details
          schema:
            $ref: "#/definitions/hour_discount_details"
      responses:
        200:
          $ref: "#/responses/hour_discount_with_id_response"
        400:
          description: "validation error while updating discount with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "HourDiscount"
      summary: "API to update discount with given discount_id"
      description: "This API is responsible for updating discount with given discount_id"
  /day-discount:
    post:
      x-swagger-router-controller: "DayDiscount"
      operationId: "createDayDiscount"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount details
          schema:
            $ref: "#/definitions/day_discount_details"
      responses:
        201:
          $ref: "#/responses/day_discount_with_id_response"
        400:
          description: "validation error while creating day discount"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DayDiscount"
      summary: "API to create day discount"
      description: "This API is responsible for creating day discount"   
    get:
      x-swagger-router-controller: "DayDiscount"
      operationId: "getDayDiscountList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/discount_type_filter"
        - $ref: "#/parameters/payment_type_filter"
      responses:
        200:
          description: "Get all discounts"
          schema:
            type: array
            items:
              $ref: "#/definitions/day_discount_response"
        204:
          description: "Empty discount list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all day discounts"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DayDiscount"
      summary: "API to fetch all day discounts"
      description: "This API is responsible for fetching all day discounts"
  /day-discount/{discount_id}:
    parameters:
      - $ref: "#/parameters/discount_id"
    get:
      x-swagger-router-controller: "DayDiscount"
      operationId: "getDayDiscount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/day_discount_with_id_response"
        400:
          description: "validation error while fetching discount with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DayDiscount"
      summary: "API to fetch discount with given discount_id"
      description: "This API is responsible for fetching discount with given discount_id" 
    put:
      x-swagger-router-controller: "DayDiscount"
      operationId: "updateDayDiscount"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount details
          schema:
            $ref: "#/definitions/day_discount_details"
      responses:
        200:
          $ref: "#/responses/day_discount_with_id_response"
        400:
          description: "validation error while updating discount with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DayDiscount"
      summary: "API to update discount with given discount_id"
      description: "This API is responsible for updating discount with given discount_id"   
  /discount-card:
    post:
      x-swagger-router-controller: "DiscountCard"
      operationId: "createDiscountCard"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount card details
          schema:
            $ref: "#/definitions/discount_card_details"
      responses:
        201:
          $ref: "#/responses/discount_card_with_id_response"
        400:
          description: "validation error while creating discount card"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCard"
      summary: "API to create discount card"
      description: "This API is responsible for creating discount card"   
    get:
      x-swagger-router-controller: "DiscountCard"
      operationId: "getDiscountCardList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/card_type_filter"
        - $ref: "#/parameters/discount_type_filter"
        - $ref: "#/parameters/payment_type_filter"
      responses:
        200:
          description: "Get all discount cards"
          schema:
            type: array
            items:
              $ref: "#/definitions/discount_card_response"
        204:
          description: "Empty discount list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all discount cards"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCard"
      summary: "API to fetch all discount cards"
      description: "This API is responsible for fetching all discount cards"
  /discount-card/{discount_id}:
    parameters:
      - $ref: "#/parameters/discount_id"
    get:
      x-swagger-router-controller: "DiscountCard"
      operationId: "getDiscountCard"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/discount_card_with_id_response"
        400:
          description: "validation error while fetching discount card with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCard"
      summary: "API to fetch discount card with given discount_id"
      description: "This API is responsible for fetching discount card with given discount_id" 
    put:
      x-swagger-router-controller: "DiscountCard"
      operationId: "updateDiscountCard"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount card details
          schema:
            $ref: "#/definitions/discount_card_details"
      responses:
        200:
          $ref: "#/responses/discount_card_with_id_response"
        400:
          description: "validation error while updating discount card with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCard"
      summary: "API to update discount card with given discount_id"
      description: "This API is responsible for updating discount card with given discount_id"
  /discount-card/{discount_id}/upload-image:
    parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/discount_id"
    put:
      x-swagger-router-controller: "DiscountCard"
      operationId: "uploadCardImage"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/item_img_1"
      responses:
        201:
          $ref: "#/responses/discount_card_with_id_response"
        400:
          description: "validation error while uploading images in discount card"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCard"
      summary: "API to upload image in discount card"
      description: "This API is responsible for uploading image in discount card"         
  /discount-category:
    post:
      x-swagger-router-controller: "DiscountCategory"
      operationId: "createDiscountCategory"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount category details
          schema:
            $ref: "#/definitions/discount_category_details"
      responses:
        201:
          $ref: "#/responses/discount_category_with_id_response"
        400:
          description: "validation error while creating discount category"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCategory"
      summary: "API to create discount category"
      description: "This API is responsible for creating discount category"   
    get:
      x-swagger-router-controller: "DiscountCategory"
      operationId: "getDiscountCategoryList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/discount_type_filter"
        - $ref: "#/parameters/payment_type_filter"
      responses:
        200:
          description: "Get all discount categories"
          schema:
            type: array
            items:
              $ref: "#/definitions/discount_category_response"
        204:
          description: "Empty discount category list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all discount categories"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCategory"
      summary: "API to fetch all discount categories"
      description: "This API is responsible for fetching all discount categories"
  /discount-category/{discount_id}:
    parameters:
      - $ref: "#/parameters/discount_id"
    get:
      x-swagger-router-controller: "DiscountCategory"
      operationId: "getDiscountCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/discount_category_with_id_response"
        400:
          description: "validation error while fetching discount category with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCategory"
      summary: "API to fetch discount category with given discount_id"
      description: "This API is responsible for fetching discount category with given discount_id" 
    put:
      x-swagger-router-controller: "DiscountCategory"
      operationId: "updateDiscountCategory"
      x-blog-api: true
      x-role : "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: discount
          in: body
          required: true
          description: The payload for discount category details
          schema:
            $ref: "#/definitions/discount_category_details"
      responses:
        200:
          $ref: "#/responses/discount_category_with_id_response"
        400:
          description: "validation error while updating discount category with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DiscountCategory"
      summary: "API to update discount category with given discount_id"
      description: "This API is responsible for updating discount category with given discount_id"       
  /minimum-order-value:
    post:
      x-swagger-router-controller: "OrderValue"
      operationId: "createOrderValue"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: minimumValue
          in: body
          required: true
          description: The payload for minimum order value details
          schema:
            $ref: "#/definitions/minimum_order_value_details"
      responses:
        201:
          $ref: "#/responses/minimum_order_value_with_id_response"
        400:
          description: "validation error while creating minimum order value"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderValue"
      summary: "API to create minimum order value"
      description: "This API is responsible for creating minimum order value"   
    get:
      x-swagger-router-controller: "OrderValue"
      operationId: "getOrderValueList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/order_type_filter"
      responses:
        200:
          description: "Get all minimum order values"
          schema:
            type: array
            items:
              $ref: "#/definitions/minimum_order_value_response"
        204:
          description: "Empty minimum_order_value list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all minimum order values"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderValue"
      summary: "API to fetch all minimum order values"
      description: "This API is responsible for fetching all minimum_order_values"
  /minimum-order-value/{condition_id}:
    parameters:
      - $ref: "#/parameters/condition_id"
    get:
      x-swagger-router-controller: "OrderValue"
      operationId: "getOrderValue"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/minimum_order_value_with_id_response"
        400:
          description: "validation error while fetching minimum order value with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderValue"
      summary: "API to fetch minimum order value with given condition_id"
      description: "This API is responsible for fetching minimum order value with given condition_id" 
    put:
      x-swagger-router-controller: "OrderValue"
      operationId: "updateOrderValue"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: minimumValue
          in: body
          required: true
          description: The payload for minimum order value details
          schema:
            $ref: "#/definitions/minimum_order_value_details"
      responses:
        200:
          $ref: "#/responses/minimum_order_value_with_id_response"
        400:
          description: "validation error while updating minimum order value with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderValue"
      summary: "API to update minimum order value with given condition_id"
      description: "This API is responsible for updating minimum order value with given condition_id"
  /minimum-order-discount:
    post:
      x-swagger-router-controller: "OrderDiscount"
      operationId: "createOrderDiscount"
      x-blog-api: 
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: minimumValue
          in: body
          required: true
          description: The payload for minimum order discount details
          schema:
            $ref: "#/definitions/minimum_order_discount_details"
      responses:
        201:
          $ref: "#/responses/minimum_order_discount_with_id_response"
        400:
          description: "validation error while creating minimum order discount"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderDiscount"
      summary: "API to create minimum order discount"
      description: "This API is responsible for creating minimum order discount"   
    get:
      x-swagger-router-controller: "OrderDiscount"
      operationId: "getOrderDiscountList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/order_type_filter"
      responses:
        200:
          description: "Get all minimum order discounts"
          schema:
            type: array
            items:
              $ref: "#/definitions/minimum_order_discount_response"
        204:
          description: "Empty minimum_order_discount list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all minimum order discounts"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderDiscount"
      summary: "API to fetch all minimum order discounts"
      description: "This API is responsible for fetching all minimum order discounts"
  /minimum-order-discount/{condition_id}:
    parameters:
      - $ref: "#/parameters/condition_id"
    get:
      x-swagger-router-controller: "OrderDiscount"
      operationId: "getOrderDiscount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/minimum_order_discount_with_id_response"
        400:
          description: "validation error while fetching minimum order discount with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderDiscount"
      summary: "API to fetch minimum order discount with given condition_id"
      description: "This API is responsible for fetching minimum order discount with given condition_id" 
    put:
      x-swagger-router-controller: "OrderDiscount"
      operationId: "updateOrderDiscount"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: minimumValue
          in: body
          required: true
          description: The payload for minimum order discount details
          schema:
            $ref: "#/definitions/minimum_order_discount_details"
      responses:
        200:
          $ref: "#/responses/minimum_order_discount_with_id_response"
        400:
          description: "validation error while updating minimum order discount with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OrderDiscount"
      summary: "API to update minimum order discount with given condition_id"
      description: "This API is responsible for updating minimum order discount with given condition_id"
  /service-charge:
    post:
      x-swagger-router-controller: "ServiceCharge"
      operationId: "createServiceCharge"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: charge
          in: body
          required: true
          description: The payload for service charge details
          schema:
            $ref: "#/definitions/service_charge_details"
      responses:
        201:
          $ref: "#/responses/service_charge_with_id_response"
        400:
          description: "validation error while creating service charge"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "ServiceCharge"
      summary: "API to create service charge"
      description: "This API is responsible for creating service charge"   
    get:
      x-swagger-router-controller: "ServiceCharge"
      operationId: "getServiceChargeList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
      responses:
        200:
          description: "Get all service charges"
          schema:
            type: array
            items:
              $ref: "#/definitions/service_charge_response"
        204:
          description: "Empty service charge list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all service charges"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "ServiceCharge"
      summary: "API to fetch all service charges"
      description: "This API is responsible for fetching all service charges"
  /service-charge/{condition_id}:
    parameters:
      - $ref: "#/parameters/condition_id"
    get:
      x-swagger-router-controller: "ServiceCharge"
      operationId: "getServiceCharge"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/service_charge_with_id_response"
        400:
          description: "validation error while fetching service charge with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "ServiceCharge"
      summary: "API to fetch service charge with given condition_id"
      description: "This API is responsible for fetching service charge with given condition_id" 
    put:
      x-swagger-router-controller: "ServiceCharge"
      operationId: "updateServiceCharge"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: charge
          in: body
          required: true
          description: The payload for service charge details
          schema:
            $ref: "#/definitions/service_charge_details"
      responses:
        200:
          $ref: "#/responses/service_charge_with_id_response"
        400:
          description: "validation error while updating service charge with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "ServiceCharge"
      summary: "API to update service charge with given condition_id"
      description: "This API is responsible for updating service charge with given condition_id"
  /delivery-charge:
    post:
      x-swagger-router-controller: "DeliveryCharge"
      operationId: "createDeliveryCharge"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: charge
          in: body
          required: true
          description: The payload for delivery charge details
          schema:
            $ref: "#/definitions/delivery_charge_details"
      responses:
        201:
          $ref: "#/responses/delivery_charge_with_id_response"
        400:
          description: "validation error while creating delivery charge"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryCharge"
      summary: "API to create delivery charge"
      description: "This API is responsible for creating delivery charge"   
    get:
      x-swagger-router-controller: "DeliveryCharge"
      operationId: "getDeliveryChargeList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/charge_type_filter"
        - $ref: "#/parameters/branch_filter"
      responses:
        200:
          description: "Get all delivery charges"
          schema:
            type: array
            items:
              $ref: "#/definitions/delivery_charge_response"
        204:
          description: "Empty delivery charge list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all delivery charges"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryCharge"
      summary: "API to fetch all delivery charges"
      description: "This API is responsible for fetching all delivery charges"
  /delivery-charge/{condition_id}:
    parameters:
      - $ref: "#/parameters/condition_id"
    get:
      x-swagger-router-controller: "DeliveryCharge"
      operationId: "getDeliveryCharge"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/delivery_charge_with_id_response"
        400:
          description: "validation error while fetching delivery charge with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryCharge"
      summary: "API to fetch delivery charge with given condition_id"
      description: "This API is responsible for fetching delivery charge with given condition_id" 
    put:
      x-swagger-router-controller: "DeliveryCharge"
      operationId: "updateDeliveryCharge"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: charge
          in: body
          required: true
          description: The payload for delivery charge details
          schema:
            $ref: "#/definitions/delivery_charge_details"
      responses:
        200:
          $ref: "#/responses/delivery_charge_with_id_response"
        400:
          description: "validation error while updating delivery charge with given condition_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryCharge"
      summary: "API to update delivery charge with given condition_id"
      description: "This API is responsible for updating delivery charge with given condition_id"
  /delivery-charge/postcode/{postcode}:
    parameters:
      - $ref: "#/parameters/postcode"
    get:
      x-swagger-router-controller: "DeliveryCharge"
      operationId: "getDeliveryChargeByPostcode"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/delivery_charge_with_id_response"
        400:
          description: "validation error while fetching delivery charge with given postcode"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryCharge"
      summary: "API to fetch delivery charge with given postcode"
      description: "This API is responsible for fetching delivery charge with given postcode"           
  /option:
    post:
      x-swagger-router-controller: "Option"
      operationId: "createOption"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: option
          in: body
          required: true
          description: The payload for option details
          schema:
            $ref: "#/definitions/option_details"
      responses:
        201:
          $ref: "#/responses/option_with_id_response"
        400:
          description: "validation error while creating option"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Option"
      summary: "API to create option"
      description: "This API is responsible for creating option"   
    get:
      x-swagger-router-controller: "Option"
      operationId: "getOptionList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/selection_filter"
      responses:
        200:
          description: "Get all options"
          schema:
            type: array
            items:
              $ref: "#/definitions/option_response"
        204:
          description: "Empty option list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all options"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Option"
      summary: "API to fetch all options"
      description: "This API is responsible for fetching all options"
  /option/{option_id}:
    parameters:
      - $ref: "#/parameters/option_id"
    get:
      x-swagger-router-controller: "Option"
      operationId: "getOption"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/option_with_id_response"
        400:
          description: "validation error while fetching option with given option_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Option"
      summary: "API to fetch option with given option_id"
      description: "This API is responsible for fetching option with given option_id" 
    put:
      x-swagger-router-controller: "Option"
      operationId: "updateOption"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: option
          in: body
          required: true
          description: The payload for service charge details
          schema:
            $ref: "#/definitions/option_details"
      responses:
        200:
          $ref: "#/responses/option_with_id_response"
        400:
          description: "validation error while updating option with given option_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Option"
      summary: "API to update option with given option_id"
      description: "This API is responsible for updating option with given option_id"                 
  /attribute:
    post:
      x-swagger-router-controller: "OptionAttribute"
      operationId: "createAttribute"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: attribute
          in: body
          required: true
          description: The payload for attribute details
          schema:
            $ref: "#/definitions/attribute_details"
      responses:
        201:
          $ref: "#/responses/attribute_with_id_response"
        400:
          description: "validation error while creating attribute"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OptionAttribute"
      summary: "API to create attribute"
      description: "This API is responsible for creating attribute"   
    get:
      x-swagger-router-controller: "OptionAttribute"
      operationId: "getAttributeList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/option_filter"
      responses:
        200:
          description: "Get all attributes"
          schema:
            type: array
            items:
              $ref: "#/definitions/attribute_response"
        204:
          description: "Empty attribute list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all attributes"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OptionAttribute"
      summary: "API to fetch all attributes"
      description: "This API is responsible for fetching all attributes"
  /attribute/{attribute_id}:
    parameters:
      - $ref: "#/parameters/attribute_id"
    get:
      x-swagger-router-controller: "OptionAttribute"
      operationId: "getAttribute"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/attribute_with_id_response"
        400:
          description: "validation error while fetching attribute with given attribute_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OptionAttribute"
      summary: "API to fetch attribute with given attribute_id"
      description: "This API is responsible for fetching attribute with given attribute_id" 
    put:
      x-swagger-router-controller: "OptionAttribute"
      operationId: "updateAttribute"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: attribute
          in: body
          required: true
          description: The payload for attribute details
          schema:
            $ref: "#/definitions/attribute_details"
      responses:
        200:
          $ref: "#/responses/attribute_with_id_response"
        400:
          description: "validation error while updating attribute with given attribute_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "OptionAttribute"
      summary: "API to update attribute with given attribute_id"
      description: "This API is responsible for updating attribute with given attribute_id"    
  /checkout-service:
    post:
      x-swagger-router-controller: "CheckoutFacility"
      operationId: "createCheckoutFacility"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: facility
          in: body
          required: true
          description: The payload for checkout facility details
          schema:
            $ref: "#/definitions/facility_details"
      responses:
        201:
          $ref: "#/responses/facility_with_id_response"
        400:
          description: "validation error while creating facility"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CheckoutService"
      summary: "API to create facility"
      description: "This API is responsible for creating facility"   
    get:
      x-swagger-router-controller: "CheckoutFacility"
      operationId: "getCheckoutFacilityList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/facility_type_filter"
      responses:
        200:
          description: "Get all checkout facilities"
          schema:
            type: array
            items:
              $ref: "#/definitions/facility_response"
        204:
          description: "Empty facility list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all facilities"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CheckoutService"
      summary: "API to fetch all facilities"
      description: "This API is responsible for fetching all facilities"
  /checkout-service/{service_id}:
    parameters:
      - $ref: "#/parameters/service_id"
    get:
      x-swagger-router-controller: "CheckoutFacility"
      operationId: "getCheckoutFacility"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/facility_with_id_response"
        400:
          description: "validation error while fetching facility with given facility_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CheckoutService"
      summary: "API to fetch facility with given facility_id"
      description: "This API is responsible for fetching facility with given facility_id" 
    put:
      x-swagger-router-controller: "CheckoutFacility"
      operationId: "updateCheckoutFacility"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: facility
          in: body
          required: true
          description: The payload for facility details
          schema:
            $ref: "#/definitions/facility_details"
      responses:
        200:
          $ref: "#/responses/facility_with_id_response"
        400:
          description: "validation error while updating facility with given facility_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CheckoutService"
      summary: "API to update facility with given facility_id"
      description: "This API is responsible for updating facility with given facility_id"    
  /day-schedule:
    post:
      x-swagger-router-controller: "DaySchedule"
      operationId: "createDaySchedule"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: schedule
          in: body
          required: true
          description: The payload for day schedule details
          schema:
            $ref: "#/definitions/schedule_details"
      responses:
        201:
          $ref: "#/responses/schedule_with_id_response"
        400:
          description: "validation error while creating day schedule"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DaySchedule"
      summary: "API to create day schedule"
      description: "This API is responsible for creating day schedule"   
    get:
      x-swagger-router-controller: "DaySchedule"
      operationId: "getDayScheduleList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
      responses:
        200:
          description: "Get all day schedules"
          schema:
            type: array
            items:
              $ref: "#/definitions/schedule_response"
        204:
          description: "Empty schedule list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all day schedules"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DaySchedule"
      summary: "API to fetch all schedules"
      description: "This API is responsible for fetching all schedules"
  /day-schedule/{schedule_id}:
    parameters:
      - $ref: "#/parameters/schedule_id"
    get:
      x-swagger-router-controller: "DaySchedule"
      operationId: "getDaySchedule"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/schedule_with_id_response"
        400:
          description: "validation error while fetching schedule with given schedule_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DaySchedule"
      summary: "API to fetch schedule with given schedule_id"
      description: "This API is responsible for fetching schedule with given schedule_id" 
    put:
      x-swagger-router-controller: "DaySchedule"
      operationId: "updateDaySchedule"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: schedule
          in: body
          required: true
          description: The payload for schedule details
          schema:
            $ref: "#/definitions/schedule_details"
      responses:
        200:
          $ref: "#/responses/schedule_with_id_response"
        400:
          description: "validation error while updating schedule with given schedule_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DaySchedule"
      summary: "API to update schedule with given schedule_id"
      description: "This API is responsible for updating schedule with given schedule_id"
  /cart:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "Cart"
      operationId: "createCart"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: cart
          in: body
          required: true
          description: The payload for cart details
          schema:
            $ref: "#/definitions/cart_details"
      responses:
        201:
          $ref: "#/responses/cart_with_id_response"
        400:
          description: "validation error while creating cart"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Cart"
      summary: "API to create cart"
      description: "This API is responsible for creating cart"   
    get:
      x-swagger-router-controller: "Cart"
      operationId: "getCartList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      responses:
        200:
          description: "Get all carts"
          schema:
            type: array
            items:
              $ref: "#/definitions/cart_response"
        204:
          description: "Empty cart list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all carts"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Cart"
      summary: "API to fetch all carts"
      description: "This API is responsible for fetching all carts"
  /cart/{cart_id}:
    parameters:
      - $ref: "#/parameters/cart_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "Cart"
      operationId: "getCart"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: [] 
      responses:
        200:
          $ref: "#/responses/cart_with_id_response"
        400:
          description: "validation error while fetching cart with given cart_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"      
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Cart"
      summary: "API to fetch cart with given cart_id"
      description: "This API is responsible for fetching cart with given cart_id" 
    put:
      x-swagger-router-controller: "Cart"
      operationId: "updateCart"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: cart
          in: body
          required: true
          description: The payload for cart details
          schema:
            $ref: "#/definitions/cart_details"
      responses:
        200:
          $ref: "#/responses/cart_with_id_response"
        400:
          description: "validation error while updating cart with given cart_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Cart"
      summary: "API to update cart with given cart_id"
      description: "This API is responsible for updating cart with given cart_id" 
    delete:
      x-swagger-router-controller: "Cart"
      operationId: "deleteCart"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: [] 
      responses:
        200:
          $ref: "#/responses/cart_with_id_response"
        400:
          description: "validation error while removing cart with given cart_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"      
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Cart"
      summary: "API to remove cart with given cart_id"
      description: "This API is responsible for removing cart with given cart_id"
  /payment-gateway:
    post:
      x-swagger-router-controller: "PaymentGateway"
      operationId: "createPaymentGateway"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: paymentGateway
          in: body
          required: true
          description: The payload for payment gateway details
          schema:
            $ref: "#/definitions/payment_gateway_details"
      responses:
        201:
          $ref: "#/responses/payment_gateway_with_id_response"
        400:
          description: "validation error while creating payment gateway"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "PaymentGateway"
      summary: "API to create payment gateway"
      description: "This API is responsible for creating payment gateway"   
    get:
      x-swagger-router-controller: "PaymentGateway"
      operationId: "getPaymentGatewayList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/payment_gateway_type_filter"
      responses:
        200:
          description: "Get all payment gateways"
          schema:
            type: array
            items:
              $ref: "#/definitions/payment_gateway_response"
        204:
          description: "Empty payment gateway list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all payment gateways"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "PaymentGateway"
      summary: "API to fetch all payment gateways"
      description: "This API is responsible for fetching all payment gateways"
  /payment-gateway/{payment_gateway_id}:
    parameters:
      - $ref: "#/parameters/payment_gateway_id"
    get:
      x-swagger-router-controller: "PaymentGateway"
      operationId: "getPaymentGateway"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/payment_gateway_with_id_response"
        400:
          description: "validation error while fetching payment gateway with given payment_gateway_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "PaymentGateway"
      summary: "API to fetch payment gateway with given payment_gateway_id"
      description: "This API is responsible for fetching payment gateway with given payment_gateway_id" 
    put:
      x-swagger-router-controller: "PaymentGateway"
      operationId: "updatePaymentGateway"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: paymentGateway
          in: body
          required: true
          description: The payload for payment gateway details
          schema:
            $ref: "#/definitions/payment_gateway_details"
      responses:
        200:
          $ref: "#/responses/payment_gateway_with_id_response"
        400:
          description: "validation error while updating payment gateway with given payment_gateway_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "PaymentGateway"
      summary: "API to update payment gateway with given payment_gateway_id"
      description: "This API is responsible for updating payment gateway with given payment_gateway_id"
  /order:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "Order"
      operationId: "createOrder"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: order
          in: body
          required: true
          description: The payload for order details
          schema:
            $ref: "#/definitions/order_extra_details"
      responses:
        201:
          $ref: "#/responses/order_with_id_response"
        400:
          description: "validation error while creating order"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to create order"
      description: "This API is responsible for creating order"   
    get:
      x-swagger-router-controller: "Order"
      operationId: "getOrderList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:    
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/order_status_filter"
        - $ref: "#/parameters/panel_type_filter"
        - $ref: "#/parameters/date"
      responses:
        200:
          description: "Get all orders"
          schema:
            type: array
            items:
              $ref: "#/definitions/order_response"
        204:
          description: "Empty order list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all orders"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to fetch all orders"
      description: "This API is responsible for fetching all orders"
  /order/{order_id}:
    parameters:
      - $ref: "#/parameters/order_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "Order"
      operationId: "getOrder"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: [] 
      responses:
        200:
          $ref: "#/responses/order_with_id_response"
        400:
          description: "validation error while fetching order with given order_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"      
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to fetch order with given order_id"
      description: "This API is responsible for fetching order with given order_id" 
    put:
      x-swagger-router-controller: "Order"
      operationId: "updateOrder"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: order
          in: body
          required: true
          description: The payload for order details
          schema:
            $ref: "#/definitions/order_update_details"
      responses:
        200:
          $ref: "#/responses/order_with_id_response"
        400:
          description: "validation error while updating order with given order_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to update order with given order_id"
      description: "This API is responsible for updating order with given order_id" 
  /gift-card:
    parameters:
        - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "UserDiscountCard"
      operationId: "purchaseGiftCard"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: card
          in: body
          required: true
          description: The payload for gift card details
          schema:
            $ref: "#/definitions/gift_card_details"
      responses:
        201:
          $ref: "#/responses/gift_card_with_id_response"
        400:
          description: "validation error while creating gift card"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "GiftCard"
      summary: "API to create gift card"
      description: "This API is responsible for creating gift card"   
    get:
      x-swagger-router-controller: "UserDiscountCard"
      operationId: "getGiftCardList"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      responses:
        200:
          description: "Get all gift cards"
          schema:
            type: array
            items:
              $ref: "#/definitions/gift_card_response"
        204:
          description: "Empty gift card list"
          schema:
            $ref: "#/responses/empty_list"
        401:
          $ref: "#/responses/authorization_error_model"    
        400:
          description: "validation error while fetching all gift cards"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "GiftCard"
      summary: "API to fetch all gift cards"
      description: "This API is responsible for fetching all gift cards"
  /gift-card/{discount_id}:
    parameters:
      - $ref: "#/parameters/discount_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "UserDiscountCard"
      operationId: "getGiftCard"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      responses:
        200:
          $ref: "#/responses/gift_card_with_id_response"
        400:
          description: "validation error while fetching gift card with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "GiftCard"
      summary: "API to fetch gift card with given discount_id"
      description: "This API is responsible for fetching gift card with given discount_id" 
    put:
      x-swagger-router-controller: "UserDiscountCard"
      operationId: "updateGiftCard"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: card
          in: body
          required: true
          description: The payload for gift card details
          schema:
            $ref: "#/definitions/gift_card_details"
      responses:
        200:
          $ref: "#/responses/gift_card_with_id_response"
        400:
          description: "validation error while updating gift card with given discount_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "GiftCard"
      summary: "API to update gift card with given discount_id"
      description: "This API is responsible for updating gift card with given discount_id"
  /delivery-charge-type:
    post:
      x-swagger-router-controller: "DeliveryChargeType"
      operationId: "createDeliveryChargeType"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: chargeType
          in: body
          required: true
          description: The payload for delivery charge type details
          schema:
            $ref: "#/definitions/charge_type_details"
      responses:
        201:
          $ref: "#/responses/charge_type_with_id_response"
        400:
          description: "validation error while creating charge type"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryChargeType"
      summary: "API to create delivery charge type"
      description: "This API is responsible for creating delivery charge type"   
    get:
      x-swagger-router-controller: "DeliveryChargeType"
      operationId: "getDeliveryChargeTypeList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
      responses:
        200:
          description: "Get all delivery charge type"
          schema:
            type: array
            items:
              $ref: "#/definitions/charge_type_response"
        204:
          description: "Empty delivery charge type list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all delivery charge types"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryChargeType"
      summary: "API to fetch all delivery charge types"
      description: "This API is responsible for fetching all delivery charge types"
  /delivery-charge-type/{charge_type_id}:
    parameters:
      - $ref: "#/parameters/charge_type_id"
    get:
      x-swagger-router-controller: "DeliveryChargeType"
      operationId: "getDeliveryChargeType"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/charge_type_with_id_response"
        400:
          description: "validation error while fetching delivery charge type with given charge_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryChargeType"
      summary: "API to fetch delivery charge type with given charge_type_id"
      description: "This API is responsible for fetching delivery charge type with given charge_type_id" 
    put:
      x-swagger-router-controller: "DeliveryChargeType"
      operationId: "updateDeliveryChargeType"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: chargeType
          in: body
          required: true
          description: The payload for delivery charge type details
          schema:
            $ref: "#/definitions/charge_type_details"
      responses:
        200:
          $ref: "#/responses/charge_type_with_id_response"
        400:
          description: "validation error while updating delivery charge type with given charge_type_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "DeliveryChargeType"
      summary: "API to update charge type with given charge_type_id"
      description: "This API is responsible for updating delivery charge type with given charge_type_id"
  /code-validity:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "Order"
      operationId: "checkCodeValidity"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/code"  
      responses:
        200:
          $ref: "#/responses/charge_type_with_id_response"
        400:
          description: "validation error while checking discount code validity"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to check discount code validity"
      description: "This API is responsible for checking discount code validity"
  /review:
    post:
      x-swagger-router-controller: "Review"
      operationId: "addReview"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json" 
      x-public-operation: true   
      parameters:
        - $ref: "#/parameters/name"
        - $ref: "#/parameters/email"
        - $ref: "#/parameters/designation"
        - $ref: "#/parameters/profile_img"
        - $ref: "#/parameters/message"
        - $ref: "#/parameters/rate"
        - $ref: "#/parameters/is_highlighted"
        - $ref: "#/parameters/is_deleted"
      responses:
        201:
          $ref: "#/responses/review_with_id_response"
        400:
          description: "validation error while creating review"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Review"
      summary: "API to create review"
      description: "This API is responsible for creating review"   
    get:
      x-swagger-router-controller: "Review"
      operationId: "getReviewList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/highlight_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all reviews"
          schema:
            type: array
            items:
              $ref: "#/definitions/review_response"
        204:
          description: "Empty review list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all reviews"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Review"
      summary: "API to fetch all reviews"
      description: "This API is responsible for fetching all reviews"
  /review/{review_id}:
    parameters:
      - $ref: "#/parameters/review_id"
    get:
      x-swagger-router-controller: "Review"
      operationId: "getReview"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/review_with_id_response"
        400:
          description: "validation error while fetching review with given review_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Review"
      summary: "API to fetch review with given review_id"
      description: "This API is responsible for fetching review with given review_id" 
    put:
      x-swagger-router-controller: "Review"
      operationId: "updateReview"
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/is_deleted"
      responses:
        200:
          $ref: "#/responses/review_with_id_response"
        400:
          description: "validation error while updating review with given review_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Review"
      summary: "API to update review with given review_id"
      description: "This API is responsible for updating review with given review_id"
    delete:
      x-swagger-router-controller: "Review"
      operationId: "deleteReview"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
      responses:
        200:
          $ref: "#/responses/review_with_id_response"
        400:
          description: "validation error while deleting review with given review_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Review"
      summary: "API to delete review with given review_id"
      description: "This API is responsible for deleting review with given review_id"
  /catering-enquiry:
    post:
      x-swagger-router-controller: "CateringEnquiry"
      operationId: "addEnquiry"
      consumes:
        - "application/json"
      produces:
        - "application/json" 
      x-public-operation: true   
      parameters:
        - name: enquiry
          in: body
          required: true
          description: The payload for catering enquiry details
          schema:
            $ref: "#/definitions/catering_enquiry_details"
      responses:
        201:
          $ref: "#/responses/catering_enquiry_with_id_response"
        400:
          description: "validation error while creating catering enquiry"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CateringEnquiry"
      summary: "API to create catering enquiry"
      description: "This API is responsible for creating catering enquiry"   
    get:
      x-swagger-router-controller: "CateringEnquiry"
      operationId: "getEnquiryList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/item_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all catering enquiries"
          schema:
            type: array
            items:
              $ref: "#/definitions/catering_enquiry_response"
        204:
          description: "Empty enquiry list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all catering enquiries"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CateringEnquiry"
      summary: "API to fetch all catering enquiries"
      description: "This API is responsible for fetching all catering enquiries"
  /catering-enquiry/{enquiry_id}:
    parameters:
      - $ref: "#/parameters/enquiry_id"
    get:
      x-swagger-router-controller: "CateringEnquiry"
      operationId: "getEnquiry"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/catering_enquiry_with_id_response"
        400:
          description: "validation error while fetching catering enquiry with given enquiry_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CateringEnquiry"
      summary: "API to fetch catering enquiry with given enquiry_id"
      description: "This API is responsible for fetching catering enquiry with given enquiry_id" 
    put:
      x-swagger-router-controller: "CateringEnquiry"
      operationId: "updateEnquiry"
      x-role: "user"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/is_deleted"
      responses:
        200:
          $ref: "#/responses/catering_enquiry_with_id_response"
        400:
          description: "validation error while updating enquiry with given enquiry_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CateringEnquiry"
      summary: "API to update enquiry with given enquiry_id"
      description: "This API is responsible for updating enquiry with given enquiry_id"
    delete:
      x-swagger-router-controller: "CateringEnquiry"
      operationId: "deleteEnquiry"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
      responses:
        200:
          $ref: "#/responses/catering_enquiry_with_id_response"
        400:
          description: "validation error while deleting enquiry with given enquiry_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "CateringEnquiry"
      summary: "API to delete enquiry with given enquiry_id"
      description: "This API is responsible for deleting enquiry with given enquiry_id"
  /flag:
    post:
      x-swagger-router-controller: "Flag"
      operationId: "addFlag"
      consumes:
        - "application/json"
      produces:
        - "application/json" 
      x-blog-api: true 
      x-role: "user" 
      security:
        - jwt: [] 
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - name: flag
          in: body
          required: true
          description: The payload for flag details
          schema:
            $ref: "#/definitions/flag_details"
      responses:
        201:
          $ref: "#/responses/flag_with_id_response"
        400:
          description: "validation error while creating flag"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Flag"
      summary: "API to create flag"
      description: "This API is responsible for creating flag"   
    get:
      x-swagger-router-controller: "Flag"
      operationId: "getFlagList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/name_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all flags"
          schema:
            type: array
            items:
              $ref: "#/definitions/flag_response"
        204:
          description: "Empty flag list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all flags"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Flag"
      summary: "API to fetch all flags"
      description: "This API is responsible for fetching all flags"
  /flag/{flag_id}:
    parameters:
      - $ref: "#/parameters/flag_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "Flag"
      operationId: "getFlag"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      security:
        - jwt: [] 
      responses:
        200:
          $ref: "#/responses/flag_with_id_response"
        400:
          description: "validation error while fetching flag with given flag_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Flag"
      summary: "API to fetch flag with given flag_id"
      description: "This API is responsible for fetching flag with given flag_id" 
    put:
      x-swagger-router-controller: "Flag"
      operationId: "updateFlag"
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      security:
        - jwt: [] 
      parameters:
        - name: flag
          in: body
          required: true
          description: The payload for flag details
          schema:
            $ref: "#/definitions/flag_details"
      responses:
        200:
          $ref: "#/responses/flag_with_id_response"
        400:
          description: "validation error while updating flag with given flag_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Flag"
      summary: "API to update flag with given flag_id"
      description: "This API is responsible for updating flag with given flag_id"        
  /branch:
    post:
      x-swagger-router-controller: "Branch"
      operationId: "createBranch"
      x-blog-api: true
      x-role: "user"
      security:
        - jwt: []
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/branch_name"
        - $ref: "#/parameters/branch_website"
        - $ref: "#/parameters/branch_map"
        - $ref: "#/parameters/branch_address"
        - $ref: "#/parameters/branch_icon"
        - $ref: "#/parameters/is_deleted"
      responses:
        201:
          $ref: "#/responses/branch_with_id_response"
        400:
          description: "validation error while creating branch"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Branch"
      summary: "API to create branch"
      description: "This API is responsible for creating branch"   
    get:
      x-swagger-router-controller: "Branch"
      operationId: "getBranchList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/search_keyword"
      responses:
        200:
          description: "Get all branch"
          schema:
            type: array
            items:
              $ref: "#/definitions/branch_response"
        204:
          description: "Empty branch list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all branch"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Branch"
      summary: "API to fetch all branch"
      description: "This API is responsible for fetching all branch"
  /branch/{branch_id}:
    parameters:
      - $ref: "#/parameters/branch_id"
    get:
      x-swagger-router-controller: "Branch"
      operationId: "getBranch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true
      responses:
        200:
          $ref: "#/responses/branch_with_id_response"
        400:
          description: "validation error while fetching branch with given branch_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Branch"
      summary: "API to fetch branch with given branch_id"
      description: "This API is responsible for fetching branch with given branch_id" 
    put:
      x-swagger-router-controller: "Branch"
      operationId: "updateBranch"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      x-blog-api: true  
      x-role: "user"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/branch_name"
        - $ref: "#/parameters/branch_website"
        - $ref: "#/parameters/branch_map"
        - $ref: "#/parameters/branch_address"
        - $ref: "#/parameters/branch_icon"
        - $ref: "#/parameters/is_deleted"
      responses:
        200:
          $ref: "#/responses/branch_with_id_response"
        400:
          description: "validation error while updating branch with given branch_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Branch"
      summary: "API to update branch with given branch_id"
      description: "This API is responsible for updating branch with given branch_id" 
  /contact-us/mail:
    post:
      x-swagger-router-controller: "ContactUs"
      operationId: "sendContactMail"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-public-operation: true  
      parameters:
        - name: contact
          in: body
          required: true
          description: The payload for contact us details
          schema:
            $ref: "#/definitions/contact_us_details"
      responses:
        200:
          description: "contact mail to bts support center"
          schema:
            $ref: "#/definitions/final_response"
        400:
          description: "validation error while sending mail to app support mail-id"
          schema:
            $ref: "#/definitions/category_validation_error"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "ContactUs"
      summary: "API to send mail to bts support mail-id"
      description: "This API is responsible for sending mail to bts support mail-id"
  /config:
    parameters:
      - $ref: "#/parameters/x-request-jwt"
    post:
      x-swagger-router-controller: "Config"
      operationId: "createConfig"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []  
      parameters:
        - name: config
          in: body
          required: true
          description: The payload for config details
          schema:
            $ref: "#/definitions/config_details"
      responses:
        201:
          $ref: "#/responses/config_with_id_response"
        400:
          description: "validation error while creating config"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Config"
      summary: "API to create config"
      description: "This API is responsible for creating config"   
    get:
      x-swagger-router-controller: "Config"
      operationId: "getConfigList"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true  
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/status_filter"
        - $ref: "#/parameters/config_type_filter"
      responses:
        200:
          description: "Get all configs"
          schema:
            type: array
            items:
              $ref: "#/definitions/config_response"
        204:
          description: "Empty config list"
          schema:
            $ref: "#/responses/empty_list"
        400:
          description: "validation error while fetching all configs"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Config"
      summary: "API to fetch all configs"
      description: "This API is responsible for fetching all configs"
  /config/{config_id}:
    parameters:
      - $ref: "#/parameters/config_id"
      - $ref: "#/parameters/x-request-jwt"
    get:
      x-swagger-router-controller: "Config"
      operationId: "getConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      x-blog-api: true 
      x-role: "user" 
      security:
        - jwt: []
      responses:
        200:
          $ref: "#/responses/config_with_id_response"
        400:
          description: "validation error while fetching config with given config_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"    
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Config"
      summary: "API to fetch config with given config_id"
      description: "This API is responsible for fetching config with given config_id" 
    put:
      x-swagger-router-controller: "Config"
      operationId: "updateConfig"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: config
          in: body
          required: true
          description: The payload for config details
          schema:
            $ref: "#/definitions/config_details"
      responses:
        200:
          $ref: "#/responses/config_with_id_response"
        400:
          description: "validation error while updating config with given config_id"
          schema:
            $ref: "#/definitions/category_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        404:
          $ref: "#/responses/resource_not_found"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Config"
      summary: "API to update config with given config_id"
      description: "This API is responsible for updating config with given config_id" 
  /order-statistics:
    get:
      x-swagger-router-controller: "Order"
      operationId: "orderStatistics"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/start_date"
        - $ref: "#/parameters/end_date"  
        - $ref: "#/parameters/order_type_filter"  
        - $ref: "#/parameters/order_status_filter"
        - $ref: "#/parameters/item_filter"
        - $ref: "#/parameters/category_filter"
      responses:
        200:
          description: "The order statistics details"
          schema:
            $ref: "#/definitions/statistics_response"
        400:
          description: "validation error while getting order statistics details"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to get order statistics details"
      description: "This API is responsible for getting order statistics details"
  /user-statistics:
    get:
      x-swagger-router-controller: "Order"
      operationId: "userStatistics"
      x-blog-api: true
      x-role: "user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - $ref: "#/parameters/x-request-jwt"
        - $ref: "#/parameters/start_date"
        - $ref: "#/parameters/end_date"
      responses:
        200:
          description: "Get all users"
          schema:
            type: array
            items:
              $ref: "#/definitions/user_response"
        400:
          description: "validation error while getting user statistics details"
          schema:
            $ref: "#/definitions/user_create_validation_error"
        401:
          $ref: "#/responses/authorization_error_model"
        default:
          $ref: "#/responses/server_error_model"
      tags:
        - "Order"
      summary: "API to get user statistics details"
      description: "This API is responsible for getting user statistics details"                   
definitions:
  mongo_default_fields:
    type: "object"
    required:
      - _id
      - created_at
      - updated_at
      - __v
    properties:
      _id:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      __v:
        type: integer  
  user_signUp_details:
    type: "object"
    required:
      - name
      - email
      - password
    properties:
      name:
        type: string
        pattern: ^[A-Za-z ]{2,}$
        description: "The name of user"
      email:
        type: string
        pattern: ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z0-9]{2,}$
        description: "The email Id"
      password:
        type: string
        maxLength: 20
        pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})
        description: "The password"
      contact_number:
        type: string
        pattern: ^[0-9]{10}$
        description: "The contact number of user"
      address_details:
        type: object
        description: "The address details of user"  
      role:
        type: string
        default: USER
        enum:
          - ADMIN
          - USER
          - SUPER_ADMIN
        description: "The role of system authorized person"
  user_signIn_details:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: "The email Id"
      password:
        type: string
        maxLength: 20
        description: "The password"
  email_details:
    type: "object"
    required:
      - email
    properties:
      email:
        type: string
        description: "The user email"
    additionalProperties: false      
  category_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The category name"
      description:
        type: string
        description: "The category description"
      allergy_ids:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The allergies of category"     
      food_type_ids:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The food types of category"  
      is_deleted:
        type: boolean
        description: "The category status" 
      is_web:
        type: boolean
        description: "The online price to show" 
      is_tw:
        type: boolean
        description: "The tw price to show" 
      is_discount_applied:
        type: boolean
        description: "The discount to applied"       
      order:
        type: number
        description: "The order of category"  
      panel_type:
        type: string
        enum:
          - E-COM
          - MERCHANDISE
          - CATERING
        description: "The panel type of category"      
  move_category_details:
    type: "object"
    properties:
      start_index:
        type: number
        description: "The start index"
      end_index:
        type: number
        description: "The end index"  
      start_index_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The start_index_id"
      panel_type:
        type: string
        enum:
          - E-COM
          - MERCHANDISE
          - CATERING
        description: "The panel type of category"
  move_item_details:
    type: "object"
    properties:
      start_index:
        type: number
        description: "The start index"
      end_index:
        type: number
        description: "The end index"  
      start_index_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The item_id"
  sub_category_details:
    type: "object"
    properties:
      name:
        type: string
        minLength: 2
        description: "The name of sub-category"
      category_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The category_id"
      description:
        type: string
        description: "The sub-category description"
      allergy_ids:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The allergies of sub-category"     
      food_type_ids:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The food types of sub-category"  
      is_deleted:
        type: boolean
        description: "The category status" 
      is_web:
        type: boolean
        description: "The online price to show" 
      is_tw:
        type: boolean
        description: "The tw price to show" 
      is_discount_applied:
        type: boolean
        description: "The discount to applied"   
      order:
        type: number
        description: "The order of sub-category"  
      panel_type:
        type: string
        enum:
          - E-COM
          - MERCHANDISE
          - CATERING
        description: "The panel type of sub-category"  
    additionalProperties: false
  allergy_details:
    type: "object"
    required:
      - name
    properties:
      name:
        type: string
        description: "The name"
      is_deleted:
        type: boolean
        description: "The status"
  filter_type_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The name"
      is_deleted:
        type: boolean
        description: "The deactivation status"    
      is_removed:
        type: boolean
        description: "The removed status"       
  filter_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The name"
      filter_type_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The filter type id"  
      is_deleted:
        type: boolean
        description: "The status"
  update_allergy_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The allergy name"
      is_deleted:
        type: boolean
        description: "The allergy status" 
  food_type_status_details:
    type: "object"
    required:
      - is_deleted
    properties:
      is_deleted:
        type: boolean
        description: "The status of food-type" 
  item_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The name of item"
      category_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The category of item"
      sub_category_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The sub-category of item"
      panel_type:
        type: string
        enum:
          - E-COM
          - MERCHANDISE
          - CATERING
        description: "The panel type of item"
      filters:
        type: object  
      food_type_ids:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The food types of item"
      description:
        type: string
        description: "The description of item"     
      online_price:
        type: number
        format: float
        description: "The online price of item"
      table_price:
        type: number
        format: float
        description: "The table price of item"
      tw_price:
        type: number
        format: float
        description: "The pos price of item"
      is_web:
        type: boolean
        description: "The status of web price"  
      is_tw:
        type: boolean
        description: "The status of pos price"  
      is_discount_applied:
        type: boolean
        description: "The status of discount to show"          
      auto_discount:
        type: boolean
        description: "The status of auto discount"    
      is_deleted:
        type: boolean
        description: "The status of item"  
      is_removed:
        type: boolean
        description: "The status of item"  
      buy_one_get_one:
        type: boolean
        description: "The status of buy_one_get_one"
      half_price:
        type: boolean
        description: "The status of half_price"
      is_added_to_cart:
        type: boolean
        description: "The catering item can be added to cart or not"
      is_promoted:
        type: boolean
        description: "The catering item can be added to cart or not"
      has_tax:
        type: boolean
        description: "The status of has_tax"
      options:
        type: array
        items:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        description: "The options of item"  
      order:
        type: number
        description: "The order of item"  
  hour_discount_details:      
    type: "object"
    properties:
      discount:
        type: number
        format: float
        description: "The discount value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The type of discount"
      day_time:
        type: object      
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of discount"  
      is_removed:
        type: boolean
        description: "The status of discount"   
  day_discount_details:      
    type: "object"
    properties:
      discount:
        type: number
        format: float
        description: "The discount value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The type of discount"
      discount_date:
        type: string
        format: date-time
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of discount"  
      is_removed:
        type: boolean
        description: "The status of discount"     
  discount_card_details:      
    type: "object"
    properties:
      name:
        type: string
      image:
        type: string 
      code:
        type: string    
      price:
        type: number
        format: float
        description: "The price"
      amount:
        type: number
        format: float
        description: "The added value"    
      discount:
        type: number
        format: float
        description: "The discount value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The type of discount"
      card_type:
        type: string
        enum:
          - GIFT_CARD
          - VOUCHER
          - COUPON
        description: "The card types"
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      expiry_date:
        type: string
        format: date-time 
        description: "The expiry date"
      expiry_day:
        type: number
        format: float
        description: "The expiry day"   
      is_deleted:
        type: boolean
        description: "The status of discount"  
      is_removed:
        type: boolean
        description: "The removed discount" 
  discount_category_details:      
    type: "object"
    properties:
      discount:
        type: number
        format: float
        description: "The discount value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The type of discount"     
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of discount"  
      is_removed:
        type: boolean
        description: "The status of discount"
      discount_type:
        type: string
        enum:
          - ONE_TIME_SUBSCRIBER
          - PAYMENT_TYPE
          - REDUNDANT_CART
        description: "The type of discount section"
      payment_type:
        type: string
        enum:
          - CARD
          - WALLET
          - CASH
          - ALL
        description: "The type of payment" 
      expiry_time:
        type: number
        format: float
        description: "The expiry time"          
  minimum_order_value_details:  
    type: "object"
    properties:
      order_type:
        type: string
        enum:
          - PICK_UP
          - CATERING
          - DELIVERY
          - DEPOSIT
        description: "The order types"
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of minimum order value"  
      is_removed:
        type: boolean
        description: "The removed minimum order value"
  minimum_order_discount_details:  
    type: "object"
    properties:
      discount:
        type: number
        format: float
        description: "The discount value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The type of discount"
      order_type:
        type: string
        enum:
          - PICK_UP
          - DELIVERY
        description: "The order types"
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of minimum order value"  
      is_removed:
        type: boolean
        description: "The removed minimum order value"  
  service_charge_details:
    type: "object"
    properties:
      tax:
        type: number
        format: float
        description: "The service tax value"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The value type of charge"    
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      is_deleted:
        type: boolean
        description: "The status of minimum order value"  
      is_removed:
        type: boolean
        description: "The removed minimum order value"
  delivery_charge_details:
    type: "object"
    properties:
      tax:
        type: number
        format: float
        description: "The delivery charges"
      type:
        type: string
        enum:
          - FLAT
          - PERCENTAGE
        description: "The value type of charge"
      charge_type:
        type: string
        enum:
          - POSTCODE
          - AREA
          - SPENDING
        description: "The charge type"    
      postcode:
        type: string
        description: "The postcode"  
      area:
        type: string
        description: "The area"  
      min_order_value:
        type: number
        format: float
        description: "The minimum order value"
      max_order_value:
        type: number
        format: float
        description: "The maximum order value"  
      is_deleted:
        type: boolean
        description: "The status of minimum order value"  
      is_removed:
        type: boolean
        description: "The removed minimum order value"
      branch_id: 
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The branch id"       
  option_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The option name"
      max_qty:
        type: number
        format: float
        description: "The maximum value"  
      is_multi_selected:
        type: boolean
        description: "The option multi selected status"    
      is_deleted:
        type: boolean
        description: "The status of option"  
      is_removed:
        type: boolean
        description: "The removed option"      
  attribute_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The attribute name"
      price:
        type: number
        format: float
        description: "The attribute price"  
      option_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The option of attribute"
      is_deleted:
        type: boolean
        description: "The status of attribute"  
      is_removed:
        type: boolean
        description: "The removed attribute"
  facility_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The facility name"
      value:
        type: number
        format: float
        description: "The facility value"  
      type:
        type: string
        enum:
          - BAG
          - TIP
          - ORDER_NUMBER
          - GIFT_CARD_NUMBER
        description: "The value type of facility" 
      is_deleted:
        type: boolean
        description: "The status of facility"  
      is_removed:
        type: boolean
        description: "The removed facility"
  schedule_details:
    type: "object"
    properties:
      day:
        type: string
        description: "The day"
      morning_time:
        type: string
        description: "The value of opening/day time"  
      evening_time:
        type: string
        description: "The value of closing/evening time" 
      is_deleted:
        type: boolean
        description: "The status of facility"  
      is_removed:
        type: boolean
        description: "The removed facility"
  cart_details:
    type: "object"
    properties:
      item_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The item"
      quantity:
        type: number
        format: float
        description: "The item quantity"
  review_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The user name"
      email:
        type: string
        description: "The user email"
      designation:
        type: string
        description: "The user designation"
      profile_img:
        type: string
        description: "The profile picture"
      message:
        type: string
        description: "The review message"        
      rate:
        type: number
        description: "The rating of system"
      is_highlighted:
        type: boolean
        description: "The review highlighted or not"
      is_deleted:
        type: boolean
        description: "The status of review"
  catering_enquiry_details: 
    type: "object"
    properties:
      name:
        type: string
        description: "The user name"
      mobile:
        type: string
        description: "The user mobile"
      address:
        type: string
        description: "The user address"
      email:
        type: string
        description: "The user email"
      postcode:
        type: string
        description: "The user postcode"       
      item_id:
        type: array
        items:
          type: string
        description: "The item id"
      message:
        type: string
        description: "The review message"   
      is_deleted:
        type: boolean
        description: "The status of enquiry"    
  flag_details: 
    type: "object"
    properties:
      name:
        type: string
        description: "The flag name"
      description:
        type: string
        description: "The flag description"
      value:
        type: string
        description: "The flag value"
      options:
        type: array
        items:
          type: string
        description: "The flag options"        
  branch_details:
    type: "object"
    properties:
      name:
        type: string
        description: "The branch name"
      website:
        type: string
        description: "The branch website"
      map:
        type: string
        description: "The branch map"
      image_url:
        type: string
        description: "The branch image"
      address:
        type: string
        description: "The branch address"        
      is_deleted:
        type: boolean
        description: "The status of branch"        
  payment_gateway_details:
    type: "object"
    properties:
      client_id:
        type: string
        description: "The client/public key value"
      secret_key:
        type: string
        description: "The secret key"
      type:
        type: string
        enum:
          - STRIPE
          - SQUARE
          - PAYPAL
        description: "The type of payment gateway"
      is_test:
        type: boolean
        description: "The mode test/live of payment gateway"  
      is_deleted:
        type: boolean
        description: "The status of payment gateway"
  config_details:
    type: "object"
    properties:
      configs:
        type: object
        description: "The configs object"
      type:
        type: string
        enum:
          - SMTP
        description: "The type of config" 
      is_deleted:
        type: boolean
        description: "The status of config"
  order_details:
    type: "object"
    properties:
      item_details:
        type: array
        items:
          type: object
        description: "The list of order items"
      order_type:
        type: string
        enum:
          - DELIVERY
          - COLLECTION
        description: "The type of order" 
      time:
        type: string
        description: "The order collection/delivery time"   
      address:
        type: object
        description: "The delivery address"  
      discount:
        type: object    
        description: "The discount details"
      tips:
        type: number
        format: float
        description: "The order tips"
      bags:
        type: number
        format: float
        description: "The bags price"
      notes:
        type: string
        description: "The order notes"    
      service_charge:
        type: number
        format: float
        description: "The order service charges"
      delivery_charge:
        type: number
        format: float
        description: "The order delivery charges"
      order_total:
        type: number
        format: float
        description: "The order total"
      panel_type:
        type: string
        enum:
          - E-COM
          - MERCHANDISE
          - CATERING
        description: "The panel type of order"   
  order_update_details:
    type: "object"
    properties:
      status:
        type: string
        enum:
          - InProgress
          - Delivered
          - Approved
          - Cancelled
          - Declined
          - Shipped
        description: "The order status"
      payment_status:
        type: string
        enum:
          - Done
          - InProgress
        description: "The payment status"
      payment_type:
        type: string
        enum:
          - Cash
          - Card
        description: "The type of payment"   
  gift_card_details:      
    type: "object"
    properties:
      card_id:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
        description: "The gift card id"
      is_removed:
        type: boolean
        description: "The removed card status"
  charge_type_details:      
    type: "object"
    properties:
      type:
        type: string
        enum:
          - POSTCODE
          - AREA
          - SPENDING
        description: "The delivery charge types"
      is_deleted:
        type: boolean
        description: "The delivery charge type status"
  contact_us_details:
    type: "object"
    properties:
      firstname:
        type: string
        description: "The firstname of user"
      lastname:
        type: string
        description: "The lastname of user"
      email:
        type: string
        description: "The user email"
      subject:
        type: string
        description: "The subject of contact"
      message:
        type: string
        description: "The message"
  final_response:
    type: "object"
    properties:
      message:
        type: string
        description: "The message"            
  user_details:
    type: "object"
    properties:
      name:
        type: string
        pattern : ^[A-Za-z ]{2,}$
        description: "The name of user"
      contact_number:
        type: string
        description: "The contact number of user"
      address_details:
        type: object
        description: "The address details of user"
      is_deleted:
        type: boolean
        description: "The status of user"
      is_email_verified:
        type: boolean
        description: "The status of email"
    additionalProperties: false
  user_extra_details:
    type: "object"
    properties:
      email:
        description: The user email-id
        type: string
      profile_img:
        description: The user profile image
        type: string
      role:
        type: string
        default: user
        enum:
          - user
          - admin
        description: "The role of system authorized person"  
  category_response:        
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/category_details"
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  subCategory_response:
    allOf:
    - $ref: "#/definitions/mongo_default_fields"
    - $ref: "#/definitions/sub_category_details"
    - type: object
      properties:
        created_by:
          type: string
          description: "The creator"  
  subCategory_with_category_response:
    allOf:
    - $ref: "#/definitions/mongo_default_fields"
    - $ref: "#/definitions/sub_category_details"  
    - type: object
      properties:
        created_by:
          type: string
          description: "The creator"
        category_name:
          type: string
          description: "The category name"  
  allergy_response:        
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/allergy_details" 
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator" 
  filter_type_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/filter_type_details" 
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator" 
  filter_response:            
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/filter_details" 
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator" 
  food_type_response:
    allOf:
    - $ref: "#/definitions/mongo_default_fields"
    - $ref: "#/definitions/allergy_details"    
    - type: object
      properties:
        avatar_url:
          type: string
          description: "The food type icon url"  
        created_by:
          type: string
          description: "The creator"
  item_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/item_details"    
      - type: object
        properties:
          item_images:
            type: array
            items:
              type: string
            description: "The images of item"
          created_by:
            type: string
            description: "The creator"  
  hour_discount_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/hour_discount_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  day_discount_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/day_discount_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"      
  discount_card_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/discount_card_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  discount_category_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/discount_category_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"          
  minimum_order_value_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/minimum_order_value_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  minimum_order_discount_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/minimum_order_discount_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  service_charge_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/service_charge_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator" 
  delivery_charge_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/delivery_charge_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"             
  option_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/option_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  attribute_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/attribute_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"          
  facility_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/facility_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  schedule_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/schedule_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  cart_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/cart_details"    
      - type: object
        properties:
          user_id:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"
  review_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/review_details"    
      - type: object
        properties:
          user_id:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"
  branch_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/branch_details"    
      - type: object
        properties:
          user_id:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"          
  payment_gateway_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/payment_gateway_details"    
      - type: object
        properties:
          created_by:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user" 
  config_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/config_details"    
      - type: object
        properties:
          created_by:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"           
  order_extra_details: 
    allOf:
      - $ref: "#/definitions/order_details"
      - $ref: "#/definitions/order_update_details"
      - type: object
        properties:
          token_id:
            type: string
            description: "The card token"
  order_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/order_details"    
      - type: object
        properties:
          user_id:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"
          card_id:
            type: string
            description: "The debit/credit card id"
          order_number:
            type: string
            description: "The order number"
          customer_id:
            type: string
            description: "The stripe customer id"
          transaction_id:
            type: string
            description: "The stripe transaction id"  
  gift_card_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/gift_card_details"    
      - type: object
        properties:
          user_id:
            type: string
            pattern: ^[0-9a-fA-F]{24}$
            description: "The user"
          card_number:
            type: string
            description: "The card number"
  charge_type_response: 
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/charge_type_details"    
      - type: object
        properties:
          created_by:
            type: string
            description: "The creator"
  catering_enquiry_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/catering_enquiry_details"
  flag_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/flag_details"  
  statistics_response:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
        description: "The order details"
      count:
        type: object
        properties:
          tips:
            type: number
          bags:
            type: number
          service_charge:
            type: number
          delivery_charge:
            type: number
          order_total:
            type: number
          discount:
            type: number 
          grand_total:
            type: number
          card:
            type: number
          cash:
            type: number            
        description: "The reporting count"
  user_create_response:
    type: "object"
    required:
      - "token"
    properties:
      user_id:
        type: "string"
        description: "The user_id"
      email:
        type: "string"
        description: "The user email"
      name:
        type: "string"
        description: "The user name"
      token:
        type: "string"
        description: "The token for user authentication"
      role:
        type: string
        default: USER
        enum:
          - ADMIN
          - USER
          - SUPER_ADMIN

        description: "The role of system authorized person"  
  user_guest_token:
    type: "object" 
    properties:
      access_token:
         type: "string"
         description: "The user_id"
      expires_in:
         type: "string"
         description: "The user email"
      refresh_expires_in: 
         type: "string"
      refresh_token:
         type: "string"  
      token_type:
        type: "string"
        description: "The user name"
      not-before-policy:
        type: "string"
      session_state:
        type: "string"
      scope:
        type: "string"      
  user_create_validation_error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        enum:
          - REQUIRED
          - PATTERN
          - INVALID_TYPE
          - SCHEMA_VALIDATION_FAILED
          - CONTENT_TYPE_NOT_SUPPORTED
          - MODEL_VALIDATION_FAILED
      message:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/user_create_validation_single_error"
  user_response:
    allOf:
      - $ref: "#/definitions/mongo_default_fields"
      - $ref: "#/definitions/user_extra_details"
      - $ref: "#/definitions/user_details"        
  user_create_validation_error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        enum:
          - REQUIRED
          - PATTERN
          - INVALID_TYPE
          - SCHEMA_VALIDATION_FAILED
          - CONTENT_TYPE_NOT_SUPPORTED
          - MODEL_VALIDATION_FAILED
      message:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/user_create_validation_single_error"
  user_create_validation_single_error:
    type: object
    required:
      - code
      - message
      - path
    properties:
      code:
        type: string
        enum:
          - PATTERN
          - ENUM_MISMATCH
          - INVALID_TYPE
          - OBJECT_ADDITIONAL_PROPERTIES
          - MIN_LENGTH
          - OBJECT_MISSING_REQUIRED_PROPERTY
      message:
        type: string
      path:
        type: array
        items:
          type: string 
  category_validation_error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        enum:
          - REQUIRED
          - PATTERN
          - SCHEMA_VALIDATION_FAILED
          - CONTENT_TYPE_NOT_SUPPORTED
          - MODEL_VALIDATION_FAILED
      message:
        type: string
      errors:
        type: array
        items:
          $ref: "#/definitions/category_validation_single_error"
  category_validation_single_error:
    type: object
    required:
      - code
      - message
      - path
    properties:
      code:
        type: string
        enum:
          - PATTERN
          - ENUM_MISMATCH
          - INVALID_TYPE
          - OBJECT_ADDITIONAL_PROPERTIES
          - MIN_LENGTH
          - MAX_LENGTH
          - OBJECT_MISSING_REQUIRED_PROPERTY
      message:
        type: string
      path:
        type: array
        items:
          type: string
  server_error_model:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
  resource_not_found_model:
    description: "No resource found"
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        enum:
          - RESOURCE_NOT_FOUND
      message:
        type: string
  empty_list_model:
    description: "No records found"
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        enum:
          - NO_CONTENT
      message:
        type: string                  
  authorization_error_model:
    type: "object"
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "string"
        enum:
          - AUTHORIZATION_ERROR
      message:
        type: "string"
  conflict_error_model:
    type: "object"
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "string"
        enum:
          - CONFLICT_ERROR
      message:
        type: "string"        
  server_error_model:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
      stack:
        type: string
parameters:
  x-request-jwt:
    name: x-request-jwt
    in: header
    type: string
    required: true
  status_filter:
    name: is_deleted
    in: query
    description: 'The response with status'
    required: false
    type: boolean
  highlight_filter:
    name: is_highlighted
    in: query
    description: 'The response with highlighted reviews'
    required: false
    type: boolean 
  promoted_filter:
    name: is_promoted
    in: query
    description: 'The response with promoted items'
    required: false
    type: boolean    
  type_filter: 
    name: filter_type_id
    in: query
    description: 'The filter by type'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  category_filter: 
    name: category_id
    in: query
    description: 'The category filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  sub_category_filter:
    name: sub_category_id
    in: query
    description: 'The sub-category filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$  
  food_type_filter:
    name: food_type_ids
    in: query
    description: 'The food-type filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  filter_type_filter:  
    name: filter_type_ids
    in: query
    type: array
    items:
      type: string
    description: 'The filter-type filter'
    required: false
  allergy_filter:
    name: is_allergy
    in: query
    description: 'The allergy status'
    required: false
    type: boolean
  options_filter:  
    name: options
    in: query
    type: array
    items:
      type: string
    description: 'The option filter'
    required: false  
  option_filter:  
    name: option_id
    in: query
    description: 'The option filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  panel_type_filter:    
    name: panel_type
    in: query
    description: 'The panel-types filter'
    required: false
    type: string
    default: E-COM
    enum:
      - E-COM
      - MERCHANDISE
      - CATERING
  card_type_filter:
    name: card_type
    in: query
    description: 'The discount card-types filter'
    required: false
    type: string
    enum:
      - GIFT_CARD
      - VOUCHER
      - COUPON
  discount_type_filter:
    name: discount_type
    in: query
    description: 'The discount types filter'
    required: false
    type: string
    enum:
      - ONE_TIME_SUBSCRIBER
      - PAYMENT_TYPE
      - REDUNDANT_CART
  payment_gateway_type_filter:
    name: type
    in: query
    description: 'The payment gateway types filter'
    required: false
    type: string
    enum:
      - STRIPE
      - SQUARE
      - PAYPAL
  config_type_filter:
    name: type
    in: query
    description: 'The payment gateway types filter'
    required: false
    type: string
    enum:
      - SMTP
  payment_type_filter:
    name: payment_type
    in: query
    description: 'The discount payment types filter'
    required: false
    type: string
    enum:
      - CARD
      - WALLET
      - CASH
      - ALL
  order_type_filter:
    name: order_type
    in: query
    description: 'The order types filter'
    required: false
    type: string
    enum:
      - PICK_UP
      - CATERING
      - DEPOSIT
      - DELIVERY 
  facility_type_filter:
    name: type
    in: query
    description: 'The service types filter'
    required: false
    type: string
    enum:
      - BAG
      - TIP 
      - ORDER_NUMBER
      - GIFT_CARD_NUMBER
  charge_type_filter:    
    name: charge_type
    in: query
    description: 'The charge-types filter'
    required: false
    type: string
    enum:
      - POSTCODE
      - AREA
      - SPENDING 
  branch_filter:
    name: branch_id
    in: query
    description: 'The branch filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  item_filter:
    name: item_id
    in: query
    description: 'The item filter'
    required: false
    type: string
    pattern: ^[0-9a-fA-F]{24}$
  name_filter:
    name: name
    in: query
    description: 'The value name'
    required: false
    type: string
  order_status_filter:    
    name: status
    in: query
    description: 'The order status filter'
    required: false
    type: string
    enum:
      - InProgress
      - Delivered
      - Approved
      - Cancelled
      - Declined
      - Shipped 
  date:
    name: date
    in: query
    description: 'The order creation date filter'
    required: false
    type: string
    format: date
  start_date:
    name: 'start_date'
    in: query
    type: string
    format: date
    description: 'The start-date'
  end_date:
    name: 'end_date'
    in: query
    type: string
    format: date
    description: 'The end-date' 
  order_type_filter:
    name: order_type
    in: query
    description: 'The order type filter'
    required: false
    type: string
    enum:
      - DELIVERY
      - COLLECTION
  selection_filter:
    name: is_multi_selected
    in: query
    description: 'The options with specified selection'
    required: false
    type: boolean  
  email_id:
    name: 'email_id'
    in: query
    type: string
    description: 'Verify email-id'  
  reset_token:  
    name: 'reset_token'
    in: query
    type: string
    description: 'Verify reset password link'  
  userId:  
    name: 'user_id'
    in: query
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    description: 'The user id'
  code:  
    name: 'code'
    in: query
    type: string
    description: 'The discount code'      
  user_id:  
    name: user_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  postcode:  
    name: postcode
    in: path
    type: string
    required: true
  category_id:
    name: category_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  sub_category_id:
    name: sub_category_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true 
  allergy_id:
    name: allergy_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true    
  spice_id:  
    name: spice_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  calorie_id:  
    name: calorie_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  order_id:  
    name: order_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  enquiry_id:  
    name: enquiry_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true  
  flag_id:  
    name: flag_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true    
  food_type_name:
    name: food_type_name
    in: formData
    type: string
    required: false
    description: "The name of food type"
  food_type_icon:
    name: food_type_icon
    in: formData
    type: file
    required: false
    description: 'The icon of food type'
  name:
    name: name
    in: formData
    type: string
    required: false
    description: "The name of user"
  email:
    name: email
    in: formData
    type: string
    required: false
    description: 'The email of user'     
  designation:
    name: designation
    in: formData
    type: string
    required: false
    description: "The designation of user"
  profile_img:
    name: profile_img
    in: formData
    type: file
    required: false  
    description: "The profile picture of user"
  message:
    name: message
    in: formData
    type: string
    required: false
    description: "The message of user"
  rate:
    name: rate
    in: formData
    type: number
    required: false
    description: "The rate of system" 
  is_highlighted:  
    name: is_highlighted
    in: formData
    type: boolean
    required: false
    description: "The highlight status"
  is_deleted:
    name: is_deleted
    in: formData
    type: boolean
    required: false
    description: "The status"
  branch_name:
    name: branch_name
    in: formData
    type: string
    required: false
    description: "The name of branch"
  branch_website:
    name: branch_website
    in: formData
    type: string
    required: false
    description: "The website of branch"
  branch_map:
    name: branch_map
    in: formData
    type: string
    required: false
    description: "The map of branch"
  branch_address:
    name: branch_address
    in: formData
    type: string
    required: false
    description: "The address of branch"      
  branch_icon:
    name: branch_icon
    in: formData
    type: file
    required: false  
    description: "The branch image"  
  file:  
    name: file
    in: formData
    type: file
    required: true
    description: 'The excel sheet for bulk creation '  
  food_type_id:  
    name: food_type_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  filter_type_id: 
    name: filter_type_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true 
  filter_id: 
    name: filter_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true   
  search_keyword:
    name: 'keyword'
    in: query
    type: string
    description: 'Search the item by given keyword'
  discount_id:
    name: discount_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true  
  condition_id:
    name: condition_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  option_id:
    name: option_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  attribute_id:   
    name: attribute_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true 
  service_id:  
    name: service_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true 
  schedule_id:  
    name: schedule_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true 
  payment_gateway_id:  
    name: payment_gateway_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  config_id:  
    name: config_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true  
  cart_id:  
    name: cart_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  review_id:  
    name: review_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true  
  branch_id:  
    name: branch_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true    
  charge_type_id:  
    name: charge_type_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true
  item_id:  
    name: item_id
    in: path
    type: string
    pattern: ^[0-9a-fA-F]{24}$
    required: true   
  page_filter:
    name: page
    in: query
    description: 'The page number'
    required: false
    type: integer
    default: 1
    minimum: 1
  items_per_page_filter:
    name: 'items_per_page'
    in: query
    description: 'The number of items per page'
    required: false
    type: integer
    default: 24
    minimum: 1  
  item_img_1:
    name: item_img_1
    in: formData
    type: file
    required: false
    description: 'The image1 of item'
  item_img_2:
    name: item_img_2
    in: formData
    type: file
    required: false
    description: 'The image2 of item'
  item_img_3:
    name: item_img_3
    in: formData
    type: file
    required: false
    description: 'The image3 of item'
  item_img_4:
    name: item_img_4
    in: formData
    type: file
    required: false
    description: 'The image4 of item'
  item_img_5:
    name: item_img_5
    in: formData
    type: file
    required: false
    description: 'The image5 of item'  
responses:
  category_with_id_response:
    description: "The details of category"
    schema:
      $ref: "#/definitions/category_response"
  subCategory_with_id_response:
    description: "The details of sub-category"
    schema:
      $ref: "#/definitions/subCategory_response" 
  allergy_with_id_response:
    description: "The details of allergy/spice/calorie"
    schema:
      $ref: "#/definitions/allergy_response"
  filter_type_with_id_response:
    description: "The details of filter type"
    schema:
      $ref: "#/definitions/filter_type_response"    
  filter_with_id_response:
    description: "The details of filter"
    schema:
      $ref: "#/definitions/filter_response"    
  food_type_with_id_response:
    description: "The details of allergy/spice/calorie"
    schema:
      $ref: "#/definitions/food_type_response"
  item_with_id_response:
    description: "The details of item"
    schema:
      $ref: "#/definitions/item_response"  
  hour_discount_with_id_response:
    description: "The details of hour discount"
    schema:
      $ref: "#/definitions/hour_discount_response"  
  day_discount_with_id_response:
    description: "The details of day discount"
    schema:
      $ref: "#/definitions/day_discount_response" 
  discount_card_with_id_response:
    description: "The details of day discount"
    schema:
      $ref: "#/definitions/discount_card_response"
  discount_category_with_id_response:
    description: "The details of day discount category"
    schema:
      $ref: "#/definitions/discount_category_response"        
  minimum_order_value_with_id_response:
    description: "The details of minimum order value"
    schema:
      $ref: "#/definitions/minimum_order_value_response" 
  minimum_order_discount_with_id_response:
    description: "The details of minimum order discount"
    schema:
      $ref: "#/definitions/minimum_order_discount_response" 
  service_charge_with_id_response:
    description: "The details of service charge"
    schema:
      $ref: "#/definitions/service_charge_response"   
  delivery_charge_with_id_response:
    description: "The details of delivery charge"
    schema:
      $ref: "#/definitions/delivery_charge_response"  
  option_with_id_response:
    description: "The details of option"
    schema:
      $ref: "#/definitions/option_response"    
  attribute_with_id_response:
    description: "The details of attribute"
    schema:
      $ref: "#/definitions/attribute_response" 
  facility_with_id_response:
    description: "The details of facility"
    schema:
      $ref: "#/definitions/facility_response"
  schedule_with_id_response:
    description: "The details of schedule"
    schema:
      $ref: "#/definitions/schedule_response"
  cart_with_id_response:
    description: "The details of cart"
    schema:
      $ref: "#/definitions/cart_response" 
  payment_gateway_with_id_response:
    description: "The details of payment gateway"
    schema:
      $ref: "#/definitions/payment_gateway_response"
  config_with_id_response:
    description: "The details of config"
    schema:
      $ref: "#/definitions/config_response"    
  order_with_id_response:
    description: "The details of order"
    schema:
      $ref: "#/definitions/order_response"
  gift_card_with_id_response:
    description: "The details of gift card"
    schema:
      $ref: "#/definitions/gift_card_response" 
  charge_type_with_id_response:
    description: "The details of charge type"
    schema:
      $ref: "#/definitions/charge_type_response"             
  conflict_error:
    description: "Already exist"
    schema:
      $ref: "#/definitions/conflict_error_model"    
  server_error_model:
    description: "Server error occurred"
    schema:
      $ref: "#/definitions/server_error_model"
  user_with_id_response:
    description: "The details of user"
    schema:
      $ref: "#/definitions/user_response" 
  review_with_id_response:
    description: "The details of reviews"
    schema:
      $ref: "#/definitions/review_response"
  branch_with_id_response:
    description: "The details of branch"
    schema:
      $ref: "#/definitions/branch_response"
  catering_enquiry_with_id_response:
    description: "The details of branch"
    schema:
      $ref: "#/definitions/catering_enquiry_response"
  flag_with_id_response:
    description: "The details of branch"
    schema:
      $ref: "#/definitions/catering_enquiry_response"        
  empty_list:
    description: "Empty List"
    schema:
      $ref: "#/definitions/empty_list_model"   
  resource_not_found:
    description: "Resource not found"
    schema:
      $ref: "#/definitions/resource_not_found_model"
  authorization_error_model:
    description: "Failed to authorize the user making the request"
    schema:
      $ref: "#/definitions/authorization_error_model"       

securityDefinitions:
  jwt:
    type: apiKey
    in: header
    name: x-request-jwt        